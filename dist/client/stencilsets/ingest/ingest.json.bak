{
	"title":"Ingest",
	"namespace":"http://b3mn.org/stencilset/ingest#",
	"description":"This is the Archive stencil set specification.",
 	"propertyPackages": [
 		{
 			"name":"baseAttributes",
 			"properties": [
				{
					"id":"name",
					"type":"String",
					"title":"Name",
					"value":"",
					"description":"The descriptive name of the BPMN element.",
 					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines" : true,
					"refToView":"text_name"	
				},
				{
					"id":"documentation",
					"type":"Text",
					"title":"Documentation",
					"value":"",
					"description":"This attribute is used to annotate the BPMN element, such as descriptions and other documentation.",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines":true,
					"popular" : true
				},
				{
					"id":"risk",
					"type":"Integer",
					"title":"Risk Probability",
					"value":"0",
					"description":"risk value for a task",
					"readonly":false,
					"optional":false,
					"simulation":true
				}
			]
 		},
		{
			"name" : "bgColor",
			"properties" : [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
 
					"value":"#ffffff",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false
				}
			]
		},
		{
			"name" : "condition",
			"properties" : [
				{
					"id":"condition",
					"type":"String",
					"title":"Condition",
 
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"popular":true
				}
			]
		},
		{
			"name":"boundaryevent",
			"properties":[
				{
					"id":"boundarycancelactivity",
					"type":"Boolean",
					"title":"CancelActivity",
 
					"value":"",
					"description":"Denotes whether the activity should be cancelled or not, i.e., whether the boundary catch event acts as an error or an escalation. If the activity is not cancelled, multiple instances of that handler can run concurrently.",
 
					"readonly":false,
					"optional":true
				}
			]
		},
 		{
 			"name" : "compensation",
 			"properties" : [
 				{
 					"id":"activityref",
					"type":"String",
					"title":"Activity reference",
 
					"value":"",
					"popular":true,
					"description":"The activity related to the compensation event",
 
					"readonly":false,
					"optional":true
 				}
 			]
 		},
 		{
 			"name":"interrupting",
 			"properties":[
 				{
					"id":"isinterrupting",
					"type":"Boolean",
					"title":"Is Interrupting",
 
					"value":true,
					"description":"This attribute denotes whether the Sub-Process encompassing the Event Sub-Process should be cancelled or not.",
 
					"inverseBoolean":false,
					"readonly":false,
					"optional":true,
					"refToView": [
						"frame",
						"frame2"
					]
				}
 			]
 		},
		{
			"name" : "diagram",
			"properties" : [
				{
					"id":"version",
					"type":"String",
					"title":"Version",
					"value":"",
					"description":"This defines the Version number of the Diagram.",
 
					"readonly":false,
					"optional":true,
					"length":"50"
				},
				{
					"id":"author",
					"type":"String",
					"title":"Author",
 
					"value":"",
					"description":"This holds the name of the author of the Diagram.",
 
					"readonly":false,
					"optional":true,
					"length":"50"
				},
				{
					"id":"language",
					"type":"String",
					"title":"Language",
 
					"value":"English",
 
					"description":"This holds the name of the language in which text is written.",
 
					"readonly":false,
					"optional":true,
					"length":"50"
				},
				{	
					"id":"namespaces",
					"type":"Complex",
					"title":"Namespaces",
					"value":"",
					"description":"Additional namespaces and theire prefixes used in the diagram., ",
 
					"readonly":false,
					"optional":true,
					"complexItems": [
						{
							"id":"prefix",
							"name":"Prefix",
							"type":"String",
							"value":"",
							"width":100,
							"optional":false 
						},
						{
							"id":"url",
							"name":"URL",
							"type":"String",
							"value":"",
							"width":200,
							"optional":false 
						}
					]
				},
				{
					"id":"targetnamespace",
					"type":"String",
					"title":"Target Namespace",
 
					"value":"http://www.omg.org/bpmn20",
					"description":"Defines the XML namespace of the elements inside the document.",
 
					"readonly":false,
					"optional":true,
					"length":"50"
				},
				{
					"id":"expressionlanguage",
					"type":"String",
					"title":"ExpressionLanguage",
 
					"value":"http://www.w3.org/1999/XPath",
					"description":"A Language may be provided so that the syntax of expressions used in the Diagram can be understood.",
 
					"readonly":false,
					"optional":true,
					"length":"50"
				},
				{
					"id":"typelanguage",
					"type":"String",
					"title":"TypeLanguage",
 
					"value":"http://www.w3.org/2001/XMLSchema",
					"description":"This attribute identifies the type system used by the elements of this Definition.",
 
					"readonly":false,
					"optional":true,
					"length":"50"
				},
				{
					"id":"creationdate",
					"type":"Date",
					"title":"CreationDate",
 
					"value":"",
					"description":"This defines the date on which the Diagram was created.",
 
					"readonly":false,
					"optional":true,
					"dateFormat":"j/m/y"
				},
				{
					"id":"modificationdate",
					"type":"Date",
					"title":"ModificationDate",
 
					"value":"",
					"description":"This defines the date on which the Diagram was last modified.",
 
					"readonly":false,
					"optional":true,
					"dateFormat":"j/m/y"
				}
			]
		},
		{
			"name": "flowElement",
			"properties" : [
				{
					"id":"categories",
					"type":"String",
					"title":"Categories",
 
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50",
					"wrapLines":true
				}
			]
		},
		{
			"name" : "itemAwareElement",
			"properties" : [
				{
					"id" : "itemsubjectref",
					"type" : "String",
					"title" : "ItemSubjectRef",
 
					"description" : "Specification of the items that are stored or conveyed by the ItemAwareElement",
 
					"readonly" : false,
					"optional" : true,
					"length" : 50,
					"wrapLines" : true
				},
				{
					"id" : "datastate",
					"type" : "String",
					"title" : "DataState",
 
					"description" : "A reference to the DataState, which defines certain states for the data contained in the item.",
 
					"readonly" : false,
					"optional" : true,
					"length" : 50,
					"wrapLines" : true
				}
			]
		},
		{
			"name":"properties",
			"properties": [
				{
					"id":"properties",
					"type":"Complex",
					"title":"Properties",
					"value":"",
					"description":"Modeler-defined properties MAY be added to an Activity. These properties are local to the Activity. (e.g., Add Customer.Customer Name).",
					"readonly": 	false,
					"optional": 	false,
					"complexItems": [
						{
							"id":"name",
							"name":"Name",
							"type":"String",
							"value":"",
							"width":100,
							"optional":false 
						},
						{
							"id":"datastate",
							"name":"DataState",
 
							"type":"String",
							"value":"",
							"width":80,
							"optional":true
						},
						{
							"id":"itemkind",
							"name":"ItemKind",
 
							"type":"Choice",
							"value":"Information",
							"items" : [
					           {
					        	   "id":"information",
					        	   "title":"Information",
					        	   "value":"Information"
					           },
					           {
					        	   "id":"physical",
					        	   "title":"Physical",
					        	   "value":"Physical"
					           }
							           
							],
							"width":80,
							"optional":true
						},
						{
							"id":"structure",
							"name":"Structure",
 
							"type":"String",
							"value":"",
							"width":100,
							"optional":true
						},
						{
							"id":"iscollection",
							"name":"isCollection",
 
							"type":"Boolean",
							"value":false,
							"width":50,
							"optional":true
						}
					]
				}
			]
		},
		{
			"name" : "iospecification",
			"properties" : [
				{
					"id":"datainputset",
					"type":"Complex",
					"title":"DataInputSet",
 
					"value":"",
					"description":"An InputSet is a collection of DataInput elements that together define a valid set of data inputs.",
 
					"readonly":false,
					"optional":true,
					"complexItems": [
						{
							"id":"name",
							"name":"Name",
							"type":"String",
							"value":"",
							"width":100,
							"optional":false 
						},
						{
							"id":"optional",
							"name":"Optional",
							"type":"Boolean",
							"value":false,
							"width":50,
							"optional":true
						},
						{
							"id":"whileexecuting",
							"name":"WhileExecuting",
 
							"type":"Boolean",
							"value":false,
							"width":80,
							"optional":true
						}
					]
				},            
				{
					"id":"dataoutputset",
					"type":"Complex",
					"title":"DataOutputSet",
 
					"value":"",
					"description":"An OutputSet is a collection of DataOutputs elements that together may be produced as output from an Activity or Event.",
 
					"readonly":false,
					"optional":true,
					"complexItems": [
						{
							"id":"name",
							"name":"Name",
							"type":"String",
							"value":"",
							"width":100,
							"optional":false 
						},
						{
							"id":"optional",
							"name":"Optional",
							"type":"Boolean",
							"value":false,
							"width":50,
							"optional":true
						},
						{
							"id":"whileexecuting",
							"name":"WhileExecuting",
 
							"type":"Boolean",
							"value":false,
							"width":80,
							"optional":true
						}
					]
				}
			]
		},
		{
			"name" : "activity",
			"properties": [
				{
					"id":"startquantity",
					"type":"Integer",
					"title":"StartQuantity",
					"value":1,
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"min":"1"
				},
				{
					"id":"completionquantity",
					"type":"Integer",
					"title":"CompletionQuantity",
 
					"value":1,
					"description":"Defines the number of tokens that must be generated from the activity",
 
					"readonly":false,
					"optional":false,
					"refToView":"",
					"min":"1"
				},
				{
					"id":"isforcompensation",
					"type":"Boolean",
					"title":"Is for Compensation",
 
					"value":false,
					"description":"A flag that identifies whether this activity is intended for the purposes of compensation.",
 
					"readonly":false,
					"optional":true,
					"refToView":"compensation"
				},
				{
					"id":"assignments",
					"type":"Complex",
					"title":"Assignments",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"complexItems": [
						{
							"id":"to",
							"name":"To",
							"type":"String",
							"value":"",
							"width":100,
							"optional":false 
						},
						{
							"id":"from",
							"name":"From",
							"type":"String",
							"value":"",
							"width":100,
							"optional":false
						},
						{
							"id":"assigntime",
							"name":"AssignTime",
 
							"type":"Choice",
							"value":"Start",
							"width":100,
							"optional":true,
							"items": [
								{
									"id":"c1",
									"title":"Start",
									"value":"Start",
									"refToView":""
								},
								{
									"id":"c2",
									"title":"End",
 
									"value":"End",
									"refToView":""
								}
							]
						}
					]
				},
				{
					"id":"failure",
					"type":"Complex",
					"title":"Failure Mode",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"complexItems": [
						{
							"id":"description",
							"name":"Description",
							"type":"String",
							"value":"",
							"width":100,
							"optional":false 
						},
						{
							"id":"Probability",
							"name":"Probablility",
							"type":"Integer",
							"value":"",
							"width":100,
							"optional":false
						},
						{
							"id":"controls",
							"name":"Controls",
							"type":"Complex",
							"value":"",
							"width":50,
							"readonly":false,
							"optional":true,
							"complexItems": [
								{
									"id":"description",
									"name":"Description",
									"type":"String",
									"value":"",
									"width":50,
									"optional":false 
								},
								{
									"id":"Probability",
									"name":"Probablility",
									"type":"Number",
									"value":"",
									"width":50,
									"optional":false
								}
							]
						}
					]
				}
			]
		},
		{
			"name":"operation",
			"properties": [
				{
					"id":"operationname",
					"type":"String",
					"title":"OperationName",
 
					"value":"",
					"description":"The descriptive name for the operation element.",
 
					"readonly":false,
					"optional":"true"
				},
				{
					"id":"inmessagename",
					"type":"String",
					"title":"InMessageName",
 
					"value":"",
					"description":"The descriptive name for the InMessage element",
 
					"readonly":false,
					"optional":"true"
				},
				{
					"id":"inmsgitemkind",
					"type":"Choice",
					"title":"InMessageItemKind",
 
					"value":"Information",
					"description":"This defines the nature of the Item. Possible values are Physical or Information. The default value is Information.",
 
					"readonly":false,
					"optional":true,
					"items": [
						{
							"id":"c1",
							"title":"Physical",
							"value":"Physical"
						},
						{
							"id":"c2",
							"title":"Information",
							"value":"Information"
						}
					]
				},
				{
					"id":"inmsgstructure",
					"type":"String",
					"title":"InMessageStructure",
 
					"value":"",
					"description":"This defines the nature of the Item. Possible values are Physical or Information. The default value is Information.",
 
					"readonly":false,
					"optional":true
				},
				{
					"id":"inmsgimport",
					"type":"Complex",
					"title":"InMessageImport",
 
					"value":"",
					"description":"Identifies the location of the data structure and its format. If the importType attribute is left unspecified, the typeLanguage specified in the Definitions is assumed.",
 
					"readonly":false,
					"optional":true,
					"complexItems": [
						{
				        	"id":"c1",
				        	"type":"String",
				        	"width":200,
				        	"value":"",
				        	"name":"ImportType"
 
				        },
						{
				        	"id":"c2",
				        	"type":"String",
				        	"width":100,
				        	"value":"",
				        	"name":"Location"
				        },
						{
				        	"id":"c3",
				        	"type":"String",
				        	"width":200,
				        	"value":"",
				        	"name":"Namespace"
 
				        }
					]
				},
				{
					"id":"inmsgiscollection",
					"type":"Boolean",
					"title":"InMessageIsCollection",
 
					"value":false,
					"description":"Setting this flag to true indicates that the actual data type is a collection.",
 
					"readonly":false,
					"optional":true
				},
				{
					"id":"outmessagename",
					"type":"String",
					"title":"OutMessageName",
 
					"value":"",
					"description":"The descriptive name for the OutMessage element",
 
					"readonly":false,
					"optional":"true"
				},
				{
					"id":"outmsgitemkind",
					"type":"Choice",
					"title":"OutMessageItemKind",
 
					"value":"Information",
					"description":"This defines the nature of the Item. Possible values are Physical or Information. The default value is Information.",
 
					"readonly":false,
					"optional":true,
					"items": [
						{
							"id":"c1",
							"title":"Physical",
							"value":"Physical"
						},
						{
							"id":"c2",
							"title":"Information",
							"value":"Information"
						}
					]
				},
				{
					"id":"outmsgstructure",
					"type":"String",
					"title":"OutMessageStructure",
 
					"value":"",
					"description":"This defines the nature of the Item. Possible values are Physical or Information. The default value is Information.",
 
					"readonly":false,
					"optional":true
				},
				{
					"id":"outmsgimport",
					"type":"Complex",
					"title":"OutMessageImport",
 
					"value":"",
					"description":"Identifies the location of the data structure and its format. If the importType attribute is left unspecified, the typeLanguage specified in the Definitions is assumed.",
 
					"readonly":false,
					"optional":true,
					"complexItems": [
						{
				        	"id":"c1",
				        	"type":"String",
				        	"width":200,
				        	"value":"",
				        	"name":"ImportType"
 
				        },
						{
				        	"id":"c2",
				        	"type":"String",
				        	"width":100,
				        	"value":"",
				        	"name":"Location"
				        },
						{
				        	"id":"c3",
				        	"type":"String",
				        	"width":200,
				        	"value":"",
				        	"name":"Namespace"
 
				        }
					]
				},
				{
					"id":"outmsgiscollection",
					"type":"Boolean",
					"title":"OutMessageIsCollection",
 
					"value":false,
					"description":"Setting this flag to true indicates that the actual data type is a collection.",
 
					"readonly":false,
					"optional":true
				}
			]
		},
		{
			"name" : "task",
			"properties" : [
				{
					"id":"tasktype",
					"type":"Choice",
					"title":"TaskType",
 
					"value":"None",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"items":[
						{
							"id":"c1",
							"title":"None",
 
							"value":"None",
							"refToView":"none"
						},
						{
							"id":"c2",
							"title":"Send",
 
							"value":"Send",
							"icon" : "activity/list/type.send.png",
							"refToView":"sendTask"
						},
						{
							"id":"c3",
							"title":"Receive",
 
							"value":"Receive",
							"icon" : "activity/list/type.receive.png",
							"refToView":"receiveTask"
						},
						{
							"id":"c4",
							"title":"User",
 
							"value":"User",
							"icon" : "activity/list/type.user.png",
							"refToView":"userTask"
						},
						{
							"id":"c5",
							"title":"Manual",
 
							"value":"Manual",
							"icon" : "activity/list/type.manual.png",
							"refToView":"manualTask"	
						},
						{
							"id":"c6",
							"title":"Service",
 
							"value":"Service",
							"icon" : "activity/list/type.service.png",
							"refToView":"serviceTask"
						},
						{
							"id":"c7",
							"title":"Business Rule",
 
							"value":"Business Rule",
							"icon" : "activity/list/type.business.rule.png",
							"refToView":"businessRuleTask"
						},
						{
							"id":"c8",
							"title":"Script",
 
							"value":"Script",
							"icon" : "activity/list/type.script.png",
							"refToView":"scriptTask"
						}
					]
				},
				{
					"id":"implementation",
					"type":"Choice",
					"title":"Implementation",
					"value":"webService",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"items": [
						{
							"id":"c1",
							"title":"HumanTaskWebService",
							"value":"humanTaskWebService",
							"refToView":""
						},
						{
							"id":"c2",
							"title":"BuisnessRuleWebService",
							"value":"BuisnessRuleWebService",
							"refToView":""
						},
						{
							"id":"c1",
							"title":"WebService",
							"value":"webService",
							"refToView":""
						},
						{
							"id":"c2",
							"title":"Other",
							"value":"other",
							"refToView":""
						},
						{
							"id":"c2",
							"title":"Unspecified",
							"value":"unspecified",
							"refToView":""
						}
					]
				},
				{
					"id":"resources",
					"type":"Complex",
					"title":"Resources",
 
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"complexItems": [
						{
							"id":"resource_type",
							"name":"Type",
 
							"type":"Choice",
							"value":"",
							"width":100,
							"optional":false,
							"items": [
								{
									"id":"c1",
									"title":"Performer",
 
									"value":"Performer",
									"refToView":""
								},
								{
									"id":"c2",
									"title":"HumanPerformer",
 
									"value":"HumanPerformer",
									"refToView":""
								},
								{
									"id":"c3",
									"title":"PotentialOwner",
 
									"value":"PotentialOwner",
									"refToView":""
								}
							]
						},
						{
							"id":"resource",
							"name":"Resource",
 
							"type":"String",
							"value":"",
							"width":200,
							"optional":true
						},
						{
							"id":"resourceassignmentexpr",
							"name":"ResourceAssignmentExpression",
							"type":"String",
							"value":"",
							"width":200,
							"optional":true
						},
						{
							"id":"language",
							"name":"Language",
							"type":"String",
							"value":"",
							"width":100,
							"optional":true
						},
						{
							"id":"evaluatestotype",
							"name":"EvaluatesToType",
							"type":"String",
							"value":"",
							"width":200,
							"optional":true
						}
					]
				},
				{
					"id":"messageref",
					"type":"String",
					"title":"MessageRef",
 
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"50"
				},
				{
					"id":"operationref",
					"type":"String",
					"title":"OperationRef",
 
					"value":"",
					"description":"ID-Reference to an operation definition.",
 
					"readonly":false,
					"optional":true
				},
				{
					"id":"instantiate",
					"type":"Boolean",
					"title":"Instantiate",
 
					"value":false,
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":""
				},
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
 
					"value":"#ffffcc",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"fill_el",
					"fill":true,
					"stroke":false
				}		
			]
		},
		{
			"name" : "subprocess",
			"properties" : [
				{
					"id": "subprocesstype",
					"type": "Choice",
					"title": "subProcessType",
 
					"value": "Embedded",
					"description": "SubProcessType is an attribute that defines whether the Sub-Process details are embedded within the higher level Process or refers to another, re-usable Process. The default is Embedded.",
 
					"optional": false,
					"refToView": "",
					"items": [
						{
							"id": "choice1",
							"title":"Embedded",
							"value":"Embedded"
						},
						{
							"id": "choice2",
							"title": "Independent",
							"value": "Independent"
						},
						{
							"id": "choice3",
							"title": "Reference",
							"value": "Reference"
						}
					]
				},
				{
					"id":"isadhoc",
					"type":"Boolean",
					"title":"isAdHoc",
 
					"value":false,
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"adhoc"
				},
				{
					"id":"adhocordering",
					"type":"Choice",
					"title":"AdHocOrdering",
 
					"value":"Sequential",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"items": [
						{
							"id":"c1",
							"title":"Sequential",
 
							"value":"sequential"
						},
						{
							"id":"c2",
							"title":"Parallel",
 
							"value":"parallel"
						}
					]
				},
				{
					"id":"adhoccompletioncondition",
					"type":"String",
					"title":"AdHocCompletionCondition",
 
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":""
				},
				{
					"id":"adhoccancelremaininginstances",
					"type":"Boolean",
					"title":"AdhocCancelRemainingInstances",
 
					"value":true,
					"description":"This attribute is used only if ordering is parallel. It determines whether running instances are cancelled when the completionCondition becomes true.",
					"readonly":false,
					"optional":true
				},
				{
					"id":"entry",
					"type":"DiagramLink",
					"title":"SubProcessRef",
 
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"u"
				},
				{
					"id":"diagramref",
					"type":"String",
					"title":"DiagramRef",
 
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":""
				},
				{
					"id":"processref",
					"type":"String",
					"title":"ProcessRef",
 
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":""
				},
				{
					"id":"inputmaps",
					"type":"String",
					"title":"InputMaps",
 
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":""
				},
				{
					"id":"outputmaps",
					"type":"String",
					"title":"OutputMaps",
 
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":""
				}
			]
		},
		{
			"name" : "gateway",
			"properties" : [
				{
					"id":"assignments",
					"type":"Complex",
					"title":"Assignments",
 
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"complexItems": [
						{
							"id":"to",
							"name":"To",
 
							"type":"String",
							"value":"",
							"width":100,
							"optional":false 
						},
						{
							"id":"from",
							"name":"From",
 
							"type":"String",
							"value":"",
							"width":100,
							"optional":false
						},
						{
							"id":"assigntime",
							"name":"AssignTime",
 
							"type":"Choice",
							"value":"Start",
							"width":100,
							"optional":true,
							"items": [
								{
									"id":"c1",
									"title":"Start",
 
									"value":"Start",
									"refToView":""
								},
								{
									"id":"c2",
									"title":"End",
 
									"value":"End",
									"refToView":""
								}
							]
						}
					]
				},
				{
					"id":"pool",
					"type":"String",
					"title":"Pool",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"length":""
				},
				{
					"id":"lanes",
					"type":"String",
					"title":"Lanes",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"length":""
				},
				{
					"id":"gates",
					"type":"String",
					"title":"Gates",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50",
					"wrapLines":true
				},
				{
					"id":"gates_outgoingsequenceflow",
					"type":"String",
					"title":"[Gates] OutgoingSequenceFlow",
 
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50",
					"wrapLines":true
				},
				{
					"id":"gates_assignments",
					"type":"String",
					"title":"[Gates] Assignments",
 
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50",
					"wrapLines":true
				}
			]
		},
		{
			"name" : "artifact",
			"properties" : [
				{
					"id":"pool",
					"type":"String",
					"title":"Pool",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"length":""
				},
				{
					"id":"lanes",
					"type":"String",
					"title":"Lanes",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"length":""
				}
			]
		},
		{
			"name":"process",
			"properties":[
				{
					"id":"processtype",
					"type":"Choice",
					"title":"ProcessType",
 
					"value":"None",
					"description":"The processType attribute Provides additional information about the level of abstraction modeled by this Process.",
 
					"readonly":false,
					"optional":false,
					"popular" : true,
					"items": [
						{
							"id":"c1",
							"title":"None",
							"value":"None"
						},
						{
							"id":"c2",
							"title":"Executable",
							"value":"Executable"
						},
						{
							"id":"c3",
							"title":"Non-Executable",
							"value":"Non-Executable"
						},
						{
							"id":"c4",
							"title":"Public",
							"value":"Public"
						}
					]
				},
				{
					"id":"isclosed",
					"type":"Boolean",
					"title":"isClosed",
 
					"value":false,
					"description":"A Boolean value specifying whether interactions, such as sending and receiving Messages and Events, not modeled in the Process can occur when the Process is executed or performed. If the value is true, they MAY NOT occur. If the value is false, they MAY occur.",
					"readonly":false,
					"optional":false
				}
			]
		},
		{
			"name" : "pool",
			"properties" : [
				{
					"id" : "multiinstance",
					"type" : "Boolean",
					"title" : "is Multi Instance Participant",
 
					"value" : false,
					"description" : "",
 
					"readonly" : false,
					"optional" : true,
					"refToView" : "multiInstance"
				},
				{
					"id":"boundaryvisible",
					"type":"Boolean",
					"title":"BoundaryVisible",
 
					"value":true,
					"description":"Defines if the rectangular boundary for the Pool is visible.",
 
					"readonly":false,
					"optional":false,
					"refToView": ["border", "c", "caption", "captionDisableAntialiasing"],
					"visible":false
				},
				{
					"id":"processname",
					"type":"String",
					"title":"ProcessName",
 
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"30"
				},
				{
					"id":"status",
					"type":"Choice",
					"title":"Status",
					"value":"None",
					"description":"",
					"readonly":false,
					"optional":false,
					"popular" : true,
					"items": [
						{
							"id":"c1",
							"title":"None",
							"value":"None"
						},
						{
							"id":"c2",
							"title":"Ready",
							"value":"Ready"
						},
						{
							"id":"c3",
							"title":"Active",
							"value":"Active"
						},
						{
							"id":"c4",
							"title":"Cancelled",
							"value":"Cancelled"
						},
						{
							"id":"c5",
							"title":"Aborting",
							"value":"Aborting"
						},
						{
							"id":"c6",
							"title":"Aborted",
							"value":"Aborted"
						},
						{
							"id":"c7",
							"title":"Completing",
							"value":"Completing"
						},
						{
							"id":"c8",
							"title":"Completed",
							"value":"Completed"
						}
					]
				},
				{
					"id":"adhoc",
					"type":"Boolean",
					"title":"AdHoc",
					"value":false,
					"description":"",
					"readonly":false,
					"optional":false
				},
				{
					"id":"adhocordering",
					"type":"Choice",
					"title":"AdHocOrdering",
 
					"value":"Parallel",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"items": [
						{
							"id":"c1",
							"title":"Sequential",
							"value":"Sequential",
							"refToView":""
						},
						{
							"id":"c2",
							"title":"Parallel",
							"value":"Parallel",
							"refToView":""
						}
					]
				},
				{
					"id":"adhoccompletioncondition",
					"type":"String",
					"title":"AdHocCompletionCondition",
 
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50"
				},
				{
					"id":"suppressjoinfailure",
					"type":"Boolean",
					"title":"SuppressJoinFailure",
					"value":false,
					"description":"",
					"readonly":false,
					"optional":false
				},
				{
					"id":"enableinstancecompensation",
					"type":"Boolean",
					"title":"EnableBooleanCompensation",
					"value":false,
					"description":"",
					"readonly":false,
					"optional":false
				},
				{
					"id":"processcategories",
					"type":"String",
					"title":"ProcessCategories",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50",
					"wrapLines":true
				},
				{
					"id":"processdocumentation",
					"type":"String",
					"title":"Process Documentation",
 
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"",
					"wrapLines":true
				}
			]
		},
		{
			"name" : "dataAssociation",
			"properties" : [
			    {
					"id":"assignments",
					"type":"Complex",
					"title":"Assignments",
 
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"popular":true,
					"complexItems": [
						{
							"id":"to",
							"name":"To",
 
							"type":"String",
							"value":"",
							"width":100,
							"optional":false 
						},
						{
							"id":"from",
							"name":"From",
 
							"type":"String",
							"value":"",
							"width":100,
							"optional":false
						},
						{
							"id":"language",
							"name":"Language",
 
							"type":"String",
							"value":"",
							"width":100,
							"optional":true
						}
					]
			    },
			    {
					"id":"transformation",
					"title":"Transformation",
					"type":"String",
					"value":"",
					"optional":true,
					"popular":true
				}
			]
		}
	],
	"stencils" : [
 		{
			"type":				"node",
			"id":				"BPMNDiagram",
			"title":			"BPMN-Diagram",
 
			"groups":			["Diagram"],
			"description":		"A BPMN 2.0 Diagram.",
 
			"view":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?> <svg    xmlns=\"http://www.w3.org/2000/svg\"    xmlns:svg=\"http://www.w3.org/2000/svg\"    xmlns:oryx=\"http://www.b3mn.org/oryx\"    xmlns:xlink=\"http://www.w3.org/1999/xlink\"    width=\"800\"    height=\"600\"    version=\"1.0\">   <defs></defs>   <g pointer-events=\"fill\" >     <polygon stroke=\"black\" fill=\"black\" stroke-width=\"1\" points=\"0,0 0,590 9,599 799,599 799,9 790,0\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" />     <rect id=\"diagramcanvas\" oryx:resize=\"vertical horizontal\" x=\"0\" y=\"0\" width=\"790\" height=\"590\" stroke=\"black\" stroke-width=\"2\" fill=\"white\" />      <text font-size=\"22\" id=\"diagramtext\" x=\"400\" y=\"25\" oryx:align=\"top center\" stroke=\"black\"></text>   </g> </svg> ",
			"icon":				"diagram.png",
			"mayBeRoot":		true,
			"hide":				true,
			"propertyPackages" : ["baseAttributes","diagram"],
			"roles":			["canContainArtifacts"]
		},
		{
			"type" : 			"node",
			"id": 				"Task",
			"title" : 			"Task",
 
			"groups" : 			["Activities"],
 
			"description" : 	"A task is a unit of work - the job to be performed.",
 
			"view":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?> <svg    xmlns=\"http://www.w3.org/2000/svg\"    xmlns:svg=\"http://www.w3.org/2000/svg\"    xmlns:oryx=\"http://www.b3mn.org/oryx\"    xmlns:xlink=\"http://www.w3.org/1999/xlink\"     width=\"102\"    height=\"82\"    version=\"1.0\">   <defs></defs>   <oryx:magnets>    <oryx:magnet oryx:cx=\"1\" oryx:cy=\"20\" oryx:anchors=\"left\" />    <oryx:magnet oryx:cx=\"1\" oryx:cy=\"40\" oryx:anchors=\"left\" />    <oryx:magnet oryx:cx=\"1\" oryx:cy=\"60\" oryx:anchors=\"left\" />        <oryx:magnet oryx:cx=\"25\" oryx:cy=\"79\" oryx:anchors=\"bottom\" />    <oryx:magnet oryx:cx=\"50\" oryx:cy=\"79\" oryx:anchors=\"bottom\" />    <oryx:magnet oryx:cx=\"75\" oryx:cy=\"79\" oryx:anchors=\"bottom\" />        <oryx:magnet oryx:cx=\"99\" oryx:cy=\"20\" oryx:anchors=\"right\" />    <oryx:magnet oryx:cx=\"99\" oryx:cy=\"40\" oryx:anchors=\"right\" />    <oryx:magnet oryx:cx=\"99\" oryx:cy=\"60\" oryx:anchors=\"right\" />        <oryx:magnet oryx:cx=\"25\" oryx:cy=\"1\" oryx:anchors=\"top\" />    <oryx:magnet oryx:cx=\"50\" oryx:cy=\"1\" oryx:anchors=\"top\" />    <oryx:magnet oryx:cx=\"75\" oryx:cy=\"1\" oryx:anchors=\"top\" />        <oryx:magnet oryx:cx=\"50\" oryx:cy=\"40\" oryx:default=\"yes\" />   </oryx:magnets>   <g pointer-events=\"fill\" oryx:minimumSize=\"50 40\">    <defs>   <radialGradient id=\"background\" cx=\"10%\" cy=\"10%\" r=\"100%\" fx=\"10%\" fy=\"10%\">    <stop offset=\"0%\" stop-color=\"#ffffff\" stop-opacity=\"1\"/>    <stop id=\"fill_el\" offset=\"100%\" stop-color=\"#ffffcc\" stop-opacity=\"1\"/>   </radialGradient>  </defs>    <rect id=\"text_frame\" oryx:anchors=\"bottom top right left\" x=\"1\" y=\"1\" width=\"94\" height=\"79\" rx=\"10\" ry=\"10\" stroke=\"none\" stroke-width=\"0\" fill=\"none\" />     <rect id=\"callActivity\" oryx:resize=\"vertical horizontal\" oryx:anchors=\"bottom top right left\" x=\"0\" y=\"0\" width=\"100\" height=\"80\" rx=\"10\" ry=\"10\" stroke=\"black\" stroke-width=\"4\" fill=\"none\" />  <rect id=\"bg_frame\" oryx:resize=\"vertical horizontal\" x=\"0\" y=\"0\" width=\"100\" height=\"80\" rx=\"10\" ry=\"10\" stroke=\"black\" stroke-width=\"1\" fill=\"url(#background) #ffffcc\" />   <text     font-size=\"12\"     id=\"text_name\"     x=\"50\"     y=\"40\"     oryx:align=\"middle center\"    oryx:fittoelem=\"text_frame\"    stroke=\"black\">   </text>     <g id=\"manualTask\" transform=\"scale(0.7,0.7) translate(8,8)\">      <path oryx:anchors=\"top left\" id=\"hand\"  style=\"opacity:1;fill:none;fill-opacity:1;stroke:#000000;stroke-width:1\"     d=\"M0.5,3.751l4.083-3.25c0,0,11.166,0.083,12.083,0.083s-2.417,2.917-1.5,2.917     s11.667,0,12.584,0c1.166,1.708-0.168,3.167-0.834,3.667s0.875,1.917-1,4.417c-0.75,0.25,0.75,1.875-1.333,3.333     c-1.167,0.583,0.583,1.542-1.25,2.833c-1.167,0-20.833,0.083-20.833,0.083l-2-1.333V3.751z\"/>   <path oryx:anchors=\"top left\" id=\"finger\" style=\"opacity:1;fill:none; stroke:#000000; stroke-width:2\" d=\"M 13.5 7 L 27 7\" />   <path oryx:anchors=\"top left\" id=\"finger1\" style=\"opacity:1;fill:none; stroke:#000000; stroke-width:2\" d=\"M 13.5 11 L 26 11\" />   <path oryx:anchors=\"top left\" id=\"finger2\" style=\"opacity:1;fill:none; stroke:#000000; stroke-width:1.5\" d=\"M 14 14.5 L 25 14.5\" />   <path oryx:anchors=\"top left\" id=\"thumb\" style=\"opacity:1;fill:none; stroke:#000000; stroke-width:1.5\" d=\"M 8.2 3.1 L 15 3.1\" />  </g>    <g id=\"businessRuleTask\" transform=\"scale(0.7,0.7) translate(8,8)\">   <rect oryx:anchors=\"top left\" id=\"top\" x=\"0\" y=\"0\" width=\"22\" height=\"4\" style=\"opacity:1;fill:#B3B1B3;fill-opacity:1;stroke:#000000\"/>   <rect oryx:anchors=\"top left\" id=\"rect\" x=\"0\" y=\"4\" style=\"opacity:1;fill:none;stroke:#000000\" width=\"22\" height=\"12\"/>   <path oryx:anchors=\"top left\" id=\"row\" style=\"opacity:1;fill:none;stroke:#000000\" d=\"M 0 10 L 22 10\" />   <path oryx:anchors=\"top left\" id=\"col\" style=\"opacity:1; fill:none; stroke:#000000\" d=\"M 7 4 L 7 16\" />  </g>    <g id=\"scriptTask\" transform=\"scale(0.7,0.7) translate(8,8)\">   <path oryx:anchors=\"top left\" id=\"paper\" style=\"opacity:1;fill:none;stroke:#000000\"    d=\"M6.402,0.5h14.5c0,0-5.833,2.833-5.833,5.583s4.417,6,4.417,9.167    s-4.167,5.083-4.167,5.083H0.235c0,0,5-2.667,5-5s-4.583-6.75-4.583-9.25S6.402,0.5,6.402,0.5z\"/>   <path oryx:anchors=\"top left\" id=\"line1\" style=\"opacity:1;fill:none;stroke:#000000;stroke-width:1.5\" d=\"M 3.5 4.5 L 13.5 4.5\" />   <path oryx:anchors=\"top left\" id=\"line2\" style=\"opacity:1;fill:none;stroke:#000000;stroke-width:1.5\" d=\"M 3.8 8.5 L 13.8 8.5\" />   <path oryx:anchors=\"top left\"  id=\"line3\" style=\"opacity:1;fill:none;stroke:#000000;stroke-width:1.5\" d=\"M 6.3 12.5 L 16.3 12.5\" />   <path oryx:anchors=\"top left\" id=\"line4\" style=\"opacity:1;fill:none;stroke:#000000;stroke-width:1.5\" d=\"M 6.5 16.5 L 16.5 16.5\" />  </g>    <g id=\"userTask\" transform=\"scale(0.7,0.7) translate(8,8)\">   <path oryx:anchors=\"top left\" style=\"opacity:1;fill:#F4F6F7;stroke:#000000\"    d=\"M0.585,24.167h24.083v-7.833c0,0-2.333-3.917-7.083-5.167h-9.25    c-4.417,1.333-7.833,5.75-7.833,5.75L0.585,24.167z\"/>   <path oryx:anchors=\"top left\" style=\"opacity:1;fill:none;stroke:#000000\" d=\"M 6 20 L 6 24\" />   <path oryx:anchors=\"top left\" style=\"opacity:1;fill:none;stroke:#000000\" d=\"M 20 20 L 20 24\" />   <circle oryx:anchors=\"top left\" fill=\"#000000\" stroke=\"#000000\" cx=\"13.002\" cy=\"5.916\" r=\"5.417\"/>   <path oryx:anchors=\"top left\" style=\"opacity:1;fill:#F0EFF0;stroke:#000000\"   d=\"M8.043,7.083c0,0,2.814-2.426,5.376-1.807s4.624-0.693,4.624-0.693    c0.25,1.688,0.042,3.75-1.458,5.584c0,0,1.083,0.75,1.083,1.5s0.125,1.875-1,3s-5.5,1.25-6.75,0S8.668,12.834,8.668,12    s0.583-1.25,1.25-1.917C8.835,9.5,7.419,7.708,8.043,7.083z\"/>  </g>    <g id=\"serviceTask\" transform=\"scale(0.7,0.7) translate(8,8)\">   <polygon oryx:anchors=\"top left\" id=\"teethForeground\" style=\"opacity:1;fill:#ffffff;stroke:#000000\" points=\"15.392,5.064 17.954,2.502 20.347,4.895 17.786,7.455     18.729,9.732 22.353,9.732 22.353,13.115 18.731,13.115 17.788,15.392 20.351,17.955 17.958,20.347 15.397,17.786 13.12,18.729     13.12,22.353 9.737,22.353 9.737,18.731 7.46,17.788 4.897,20.35 2.506,17.958 5.066,15.397 4.124,13.12 0.5,13.12 0.5,9.737     4.121,9.737 5.065,7.461 2.503,4.898 4.895,2.506 7.455,5.066 9.732,4.125 9.732,0.5 13.116,0.5 13.116,4.121 \"/>   <circle oryx:anchors=\"top left\" id=\"ringForeground\" style=\"opacity:1;fill:none;stroke:#000000\" cx=\"11.427\" cy=\"11.426\" r=\"3.714\"/>   <polygon oryx:anchors=\"top left\" id=\"teethBackground\" style=\"opacity:1;fill:#ffffff;stroke:#000000\" points=\"21.392,11.064 23.954,8.502 26.347,10.895 23.786,13.455     24.729,15.732 28.353,15.732 28.353,19.115 24.731,19.115 23.788,21.392 26.351,23.955 23.958,26.347 21.397,23.786 19.12,24.729     19.12,28.353 15.737,28.353 15.737,24.731 13.46,23.788 10.897,26.35 8.506,23.958 11.066,21.397 10.124,19.12 6.5,19.12     6.5,15.737 10.121,15.737 11.065,13.461 8.503,10.898 10.895,8.506 13.455,11.066 15.732,10.125 15.732,6.5 19.116,6.5     19.116,10.121 \"/>   <circle oryx:anchors=\"top left\" id=\"ringBackground\" style=\"opacity:1;fill:none;stroke:#000000\" cx=\"17.427\" cy=\"17.426\" r=\"3.714\"/>  </g>    <g id=\"sendTask\">   <path oryx:anchors=\"left top\" stroke=\"white\" fill=\"black\" stroke-width=\"1\" d=\"M8,11 L8,21 L24,21 L24,11 L16,17z\"/>   <path oryx:anchors=\"left top\" stroke=\"white\" fill=\"black\" stroke-width=\"1\" d=\"M7,10 L16,17 L25 10z\"/>  </g>    <g id=\"receiveTask\">   <path oryx:anchors=\"left top\" stroke=\"black\" fill=\"none\" stroke-width=\"1\" d=\"M8,11 L8,21 L24,21 L24,11z M8,11 L16,17 L24,11\" />  </g>    <g id=\"none\"></g>  <g        id=\"loop\">       <path          oryx:anchors=\"bottom\"          style=\"opacity:1;fill:none;fill-opacity:1;stroke:#000000;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:2.0999999;stroke-dasharray:none;stroke-opacity:1\"          id=\"path2396\"          d=\"M 47.608384,75.188343 L 47.608384,78.188343 L 44.608384,78.188343 M 47.608384,78.188343 A 4.875,4.875 0 1 1 51.639336,78.189378\"          />     </g>      <g id=\"parallel\">   <path oryx:anchors=\"bottom\" fill=\"none\" stroke=\"black\" d=\"M46 70 v8 M50 70 v8 M54 70 v8\" stroke-width=\"2\" />  </g>  <g id=\"sequential\">   <path oryx:anchors=\"bottom\" fill=\"none\" stroke=\"#000000\" stroke-width=\"2\" d=\"M46,76h10M46,72h10 M46,68h10\"/>  </g>     <g id=\"compensation\">   <path oryx:anchors=\"bottom\" fill=\"none\" stroke=\"black\" d=\"M 62 74 L 66 70 L 66 78 L 62 74 L 62 70 L 58 74 L 62 78 L 62 74\" stroke-width=\"1\" />  </g>   </g> </svg> ",
			"icon" : 			"activity/task.png",
			"propertyPackages" :[
				"baseAttributes",
				"flowElement",
				"activity",
				"task",
				"loopcharacteristics",
				"properties",
				"iospecification"
			],
			"roles" : 			[
				"all",
				"sequence_start",
				"sequence_end",
				"from_task_event",
				"to_task_event",
				"FromEventbasedGateway",
				"messageflow_start",
				"messageflow_end",
				"fromtoall",
				"ActivitiesMorph"
			]
		},
		{
			"type" : 			"node",
			"id" :				"CollapsedSubprocess",
			"title" : 			"Collapsed Subprocess",
 
			"groups" :			["Activities"],
 
			"description" :		"A subprocess is a decomposable activity. It can be linked to another process diagram.",
 
			"view":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?> <svg    xmlns=\"http://www.w3.org/2000/svg\"    xmlns:svg=\"http://www.w3.org/2000/svg\"    xmlns:oryx=\"http://www.b3mn.org/oryx\"    xmlns:xlink=\"http://www.w3.org/1999/xlink\"    width=\"100\"    height=\"80\"    version=\"1.0\">   <defs></defs>   <oryx:magnets>    <oryx:magnet oryx:cx=\"1\" oryx:cy=\"20\" oryx:anchors=\"left\" />    <oryx:magnet oryx:cx=\"1\" oryx:cy=\"40\" oryx:anchors=\"left\" />    <oryx:magnet oryx:cx=\"1\" oryx:cy=\"60\" oryx:anchors=\"left\" />        <oryx:magnet oryx:cx=\"25\" oryx:cy=\"79\" oryx:anchors=\"bottom\" />    <oryx:magnet oryx:cx=\"50\" oryx:cy=\"79\" oryx:anchors=\"bottom\" />    <oryx:magnet oryx:cx=\"75\" oryx:cy=\"79\" oryx:anchors=\"bottom\" />        <oryx:magnet oryx:cx=\"99\" oryx:cy=\"20\" oryx:anchors=\"right\" />    <oryx:magnet oryx:cx=\"99\" oryx:cy=\"40\" oryx:anchors=\"right\" />    <oryx:magnet oryx:cx=\"99\" oryx:cy=\"60\" oryx:anchors=\"right\" />        <oryx:magnet oryx:cx=\"25\" oryx:cy=\"1\" oryx:anchors=\"top\" />    <oryx:magnet oryx:cx=\"50\" oryx:cy=\"1\" oryx:anchors=\"top\" />    <oryx:magnet oryx:cx=\"75\" oryx:cy=\"1\" oryx:anchors=\"top\" />        <oryx:magnet oryx:cx=\"50\" oryx:cy=\"40\" oryx:default=\"yes\" />   </oryx:magnets>   <g pointer-events=\"fill\" oryx:minimumSize=\"80 60\">    <defs>   <radialGradient id=\"background\" cx=\"10%\" cy=\"10%\" r=\"100%\" fx=\"10%\" fy=\"10%\">    <stop offset=\"0%\" stop-color=\"#ffffff\" stop-opacity=\"1\"/>    <stop id=\"fill_el\" offset=\"100%\" stop-color=\"#ffffcc\" stop-opacity=\"1\"/>   </radialGradient>  </defs>    <rect id=\"text_frame\" oryx:anchors=\"bottom top right left\" x=\"1\" y=\"1\" width=\"94\" height=\"79\" rx=\"10\" ry=\"10\" stroke=\"none\" stroke-width=\"0\" fill=\"none\" />  <rect id=\"bg_frame\" oryx:anchors=\"bottom top right left\" x=\"0\" y=\"0\" width=\"100\" height=\"80\" rx=\"10\" ry=\"10\" stroke=\"black\" stroke-width=\"1\" fill=\"url(#background) #ffffcc\" />     <rect id=\"callActivity\" oryx:resize=\"vertical horizontal\" oryx:anchors=\"bottom top right left\" x=\"0\" y=\"0\" width=\"100\" height=\"80\" rx=\"10\" ry=\"10\" stroke=\"black\" stroke-width=\"4\" fill=\"none\" />  <rect id=\"border\" oryx:anchors=\"top bottom left right\" oryx:resize=\"vertical horizontal\" x=\"2.5\" y=\"2.5\" width=\"95\" height=\"75\" rx=\"8\" ry=\"8\" stroke=\"black\" stroke-width=\"1\" fill=\"none\" />      <text     font-size=\"12\"    id=\"text_name\"     x=\"50\"     y=\"40\"     oryx:align=\"middle center\"    oryx:fittoelem=\"text_frame\"    stroke=\"black\">   </text>         <a id=\"u\" target=\"_blank\">    <g id=\"b\"     oryx:anchors=\"bottom\">         <rect oryx:anchors=\"bottom\" x=\"44\" y=\"66\" width=\"14\" height=\"14\" fill=\"none\" stroke=\"black\" stroke-width=\"1\" />    <path oryx:anchors=\"bottom\" fill=\"none\" stroke=\"black\" d=\"M51 68 v10 M 46 73 h10\" stroke-width=\"1\"/>      </g>  </a>  <g id=\"none\"></g>  <g id=\"loop\">   <path           oryx:anchors=\"bottom\"          style=\"opacity:1;fill:none;fill-opacity:1;stroke:#000000;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:2.0999999;stroke-dasharray:none;stroke-opacity:1\"           id=\"path2396\"           d=\"M 50.5,72 L 50.5,75 L 47.5,75 M 50.5,75 A 4.875,4.875 0 1 1 54.5,75\"    transform=\"translate(-15.5,0)\"           />  </g>     <g id=\"parallel\">   <path oryx:anchors=\"bottom\" fill=\"none\" stroke=\"black\" d=\"M47 65 v10 M51 65 v10 M55 65 v10\" stroke-width=\"2\" transform=\"translate(-15 0)\" />  </g>  <g id=\"sequential\">   <path oryx:anchors=\"bottom\" fill=\"none\" stroke=\"#000000\" stroke-width=\"2\" d=\"M42,66H32 M42,70H32 M42,74H32\"/>  </g>      <g id=\"adhoc\">   <text     oryx:anchors=\"bottom\"    x=\"61\"    y=\"77\"    font-size=\"20\"    transform=\"translate(14,0)\"   >~</text>  </g>  <g id=\"compensation\">   <path oryx:anchors=\"bottom\" fill=\"none\" stroke=\"black\" d=\"M 51 70 L 56 65 L 56 75z M45.7 70 L50.7 75 L 50.7 65z\" stroke-width=\"1\"   transform=\"translate(-28,0)\" />  </g>   </g> </svg> ",
			"icon" :			"activity/subprocess.png",
			"propertyPackages" :[
				"baseAttributes",
				"flowElement",
				"activity",
				"subprocess",
				"loopcharacteristics",
				"bgColor",
				"properties",
				"iospecification"
			],
			"properties" :		[
				{
					"id":"activitytype",
					"type":"String",
					"title":"ActivityType",
 
					"value":"Sub-Process",
 
					"description":"The Type of Activity.",
 
					"readonly":true,
					"optional":false,
					"length":""
				},
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
 
					"value":"#ffffcc",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"fill_el",
					"fill":true,
					"stroke":false
				}	
			],
			"roles": 			[
				"all",
				"sequence_start",
				"sequence_end",
				"messageflow_start",
				"messageflow_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"ActivitiesMorph"
			]
		},
		{
			"type" : 			"node",
			"id" :				"Subprocess",
			"title" :			"Expanded Subprocess",
 
			"groups" :			["Activities"],
 
			"description" :		"A subprocess is a decomposable activity. An expanded subprocess contains a valid BPMN diagram.",
 
			"view":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?> <svg    xmlns=\"http://www.w3.org/2000/svg\"    xmlns:svg=\"http://www.w3.org/2000/svg\"    xmlns:oryx=\"http://www.b3mn.org/oryx\"    xmlns:xlink=\"http://www.w3.org/1999/xlink\"    width=\"200\"    height=\"160\"    version=\"1.0\">   <defs></defs>   <oryx:magnets>    <oryx:magnet oryx:cx=\"1\" oryx:cy=\"50\" oryx:anchors=\"left\" />    <oryx:magnet oryx:cx=\"1\" oryx:cy=\"80\" oryx:anchors=\"left\" />    <oryx:magnet oryx:cx=\"1\" oryx:cy=\"110\" oryx:anchors=\"left\" />        <oryx:magnet oryx:cx=\"70\" oryx:cy=\"159\" oryx:anchors=\"bottom\" />    <oryx:magnet oryx:cx=\"100\" oryx:cy=\"159\" oryx:anchors=\"bottom\" />    <oryx:magnet oryx:cx=\"130\" oryx:cy=\"159\" oryx:anchors=\"bottom\" />        <oryx:magnet oryx:cx=\"199\" oryx:cy=\"50\" oryx:anchors=\"right\" />    <oryx:magnet oryx:cx=\"199\" oryx:cy=\"80\" oryx:anchors=\"right\" />    <oryx:magnet oryx:cx=\"199\" oryx:cy=\"110\" oryx:anchors=\"right\" />        <oryx:magnet oryx:cx=\"70\" oryx:cy=\"1\" oryx:anchors=\"top\" />    <oryx:magnet oryx:cx=\"100\" oryx:cy=\"1\" oryx:anchors=\"top\" />    <oryx:magnet oryx:cx=\"130\" oryx:cy=\"1\" oryx:anchors=\"top\" />        <oryx:magnet oryx:cx=\"100\" oryx:cy=\"80\" oryx:default=\"yes\" />   </oryx:magnets>   <g pointer-events=\"fill\" oryx:minimumSize=\"120 100\" oryx:maximumSize=\"\" >    <defs>   <radialGradient id=\"background\" cx=\"10%\" cy=\"10%\" r=\"100%\" fx=\"10%\" fy=\"10%\">    <stop offset=\"0%\" stop-color=\"#ffffff\" stop-opacity=\"1\"/>    <stop id=\"fill_el\" offset=\"100%\" stop-color=\"#ffffff\" stop-opacity=\"1\"/>   </radialGradient>  </defs>       <rect id=\"text_frame\" oryx:anchors=\"bottom top right left\" x=\"0\" y=\"0\" width=\"190\" height=\"160\" rx=\"10\" ry=\"10\" stroke=\"none\" stroke-width=\"0\" fill=\"none\" />  <rect id=\"bg_frame\" oryx:anchors=\"bottom top right left\" x=\"0\" y=\"0\" width=\"200\" height=\"160\" rx=\"10\" ry=\"10\" stroke=\"black\" stroke-width=\"1\" fill=\"url(#background) white\" />  <rect id=\"callActivity\" oryx:anchors=\"bottom top right left\" oryx:resize=\"vertical horizontal\" x=\"0\" y=\"0\" width=\"200\" height=\"160\" rx=\"10\" ry=\"10\" stroke=\"black\" stroke-width=\"4\" fill=\"none\" />     <rect id=\"border\" oryx:anchors=\"top bottom left right\" oryx:resize=\"vertical horizontal\" x=\"2.5\" y=\"2.5\" width=\"195\" height=\"155\" rx=\"8\" ry=\"8\" stroke=\"black\" stroke-width=\"1\" fill=\"none\" />      <text     font-size=\"12\"     id=\"text_name\"     x=\"8\"     y=\"10\"     oryx:align=\"top left\"    oryx:fittoelem=\"text_frame\"    oryx:anchors=\"left top\"     stroke=\"black\"></text>        <g id=\"none\"></g>  <g id=\"loop\">   <path           oryx:anchors=\"bottom\"          style=\"opacity:1;fill:none;fill-opacity:1;stroke:#000000;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:2.0999999;stroke-dasharray:none;stroke-opacity:1\"           id=\"path2396\"           d=\"M 100.5,152 L 100.5,155 L 97.5,155 M 100.5,155 A 4.875,4.875 0 1 1 104.5,155\"    />  </g>      <g id=\"parallel\">   <path oryx:anchors=\"bottom\" fill=\"none\" stroke=\"black\" d=\"M97 145 v10 M101 145 v10 M105 145 v10\" stroke-width=\"2\" />  </g>  <g id=\"sequential\">   <path oryx:anchors=\"bottom\" fill=\"none\" stroke=\"#000000\" stroke-width=\"2\" d=\"M96,154h10 M96,150h10 M96,146h10\"/>  </g>      <g id=\"adhoc\">   <text     oryx:anchors=\"bottom\"    x=\"101\"    y=\"157\"    font-size=\"20\"    transform=\"translate(8,0)\"   >~</text>  </g>  <g id=\"compensation\">   <path oryx:anchors=\"bottom\" fill=\"none\" stroke=\"black\" d=\"M 101 150 L 106 145 L 106 155z M95.7 150 L 100.7 155 L 100.7 145z\" stroke-width=\"1\"   transform=\"translate(-16,0)\" />  </g>   </g> </svg> ",
			"icon" :			"activity/expanded.subprocess.png",
 			"layout" : 			[
 									{"type" : "layout.bpmn2_0.subprocess"},
 									{"type" : "layout.container.dockers"},
 									{
 										"type" : "layout.container.minBounds",
 										"options" : {
 											"fixedX" : true,
 											"ignoreChildsWithId" : [
 												"http://b3mn.org/stencilset/bpmn2.0#Lane",
 												"http://b3mn.org/stencilset/bpmn2.0#StartNoneEvent"
 											]
 										}
 									}
 								],
			"propertyPackages" :[
				"baseAttributes",
				"flowElement",
				"activity",
				"subprocess",
				"loopcharacteristics",
				"properties",
				"iospecification"
			],
			"properties" :		[
				{
					"id":"activitytype",
					"type":"String",
					"title":"ActivityType",
 
					"value":"Sub-Process",
 
					"description":"The Type of Activity.",
 
					"readonly":true,
					"optional":false,
					"length":""
				},
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
 
					"value":"#ffffff",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"fill_el",
					"fill":true,
					"stroke":false
				}	
			],
			"roles"	:			[
				"all",
				"sequence_start",
				"sequence_end",
				"messageflow_start",
				"messageflow_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"canContainArtifacts",
				"ActivitiesMorph"
			]
		},
		{
			"type" : 			"node",
			"id" :				"EventSubprocess",
			"title" :			"Event-Subprocess",
 
			"groups" :			["Activities"],
 
			"description" :		"An Event-Subprocess is placed within another Subprocess. It becomes active when its start event gets triggered and can interrupt the Subprocess context or run in parallel (non-interrupting).",
 
			"view":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?> <svg    xmlns=\"http://www.w3.org/2000/svg\"    xmlns:svg=\"http://www.w3.org/2000/svg\"    xmlns:oryx=\"http://www.b3mn.org/oryx\"    xmlns:xlink=\"http://www.w3.org/1999/xlink\"    width=\"200\"    height=\"160\"    version=\"1.0\">   <defs></defs>   <oryx:magnets>    <oryx:magnet oryx:cx=\"0\" oryx:cy=\"80\" oryx:anchors=\"left\" />    <oryx:magnet oryx:cx=\"100\" oryx:cy=\"160\" oryx:anchors=\"bottom\" />    <oryx:magnet oryx:cx=\"200\" oryx:cy=\"80\" oryx:anchors=\"right\" />    <oryx:magnet oryx:cx=\"100\" oryx:cy=\"0\" oryx:anchors=\"top\" />    <oryx:magnet oryx:cx=\"100\" oryx:cy=\"80\" oryx:default=\"yes\" />   </oryx:magnets>   <g pointer-events=\"fill\" oryx:minimumSize=\"120 100\" oryx:maximumSize=\"\" >    <defs>   <radialGradient id=\"background\" cx=\"10%\" cy=\"10%\" r=\"100%\" fx=\"10%\" fy=\"10%\">    <stop offset=\"0%\" stop-color=\"#ffffff\" stop-opacity=\"1\"/>    <stop id=\"fill_el\" offset=\"100%\" stop-color=\"#ffffff\" stop-opacity=\"1\"/>   </radialGradient>  </defs>    <rect id=\"text_frame\" oryx:anchors=\"bottom top right left\" x=\"0\" y=\"0\" width=\"190\" height=\"160\" rx=\"10\" ry=\"10\" stroke=\"none\" stroke-width=\"0\" fill=\"none\" />  <rect id=\"bg_frame\" oryx:anchors=\"bottom top right left\" oryx:resize=\"vertical horizontal\" x=\"0\" y=\"0\" width=\"200\" height=\"160\" rx=\"10\" ry=\"10\" stroke=\"black\" stroke-width=\"1\" stroke-dasharray=\"2,2,2\" fill=\"url(#background) white\" />      <text     font-size=\"12\"     id=\"text_name\"     x=\"8\"     y=\"10\"     oryx:align=\"top left\"    oryx:fittoelem=\"text_frame\"    oryx:anchors=\"left top\"     stroke=\"black\"></text>        <g id=\"none\"></g>  <g id=\"loop\">   <path           oryx:anchors=\"bottom\"          style=\"opacity:1;fill:none;fill-opacity:1;stroke:#000000;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:2.0999999;stroke-dasharray:none;stroke-opacity:1\"           id=\"path2396\"           d=\"M 100.5,152 L 100.5,155 L 97.5,155 M 100.5,155 A 4.875,4.875 0 1 1 104.5,155\"    />  </g>      <g id=\"parallel\">   <path oryx:anchors=\"bottom\" fill=\"none\" stroke=\"black\" d=\"M97 145 v10 M101 145 v10 M105 145 v10\" stroke-width=\"2\" />  </g>  <g id=\"sequential\">   <path oryx:anchors=\"bottom\" fill=\"none\" stroke=\"#000000\" stroke-width=\"2\" d=\"M96,154h10 M96,150h10 M96,146h10\"/>  </g>      <g id=\"adhoc\">   <text     oryx:anchors=\"bottom\"    x=\"101\"    y=\"157\"    font-size=\"20\"    transform=\"translate(8,0)\"   >~</text>  </g>  <g id=\"compensation\">   <path oryx:anchors=\"bottom\" fill=\"none\" stroke=\"black\" d=\"M 101 150 L 106 145 L 106 155z M95.7 150 L 100.7 155 L 100.7 145z\" stroke-width=\"1\"   transform=\"translate(-16,0)\" />  </g>   </g> </svg> ",
			"icon" :			"activity/event.subprocess.png",
 			"layout" : 			[{"type" : "layout.bpmn2_0.subprocess"}],
			"propertyPackages" :[
				"baseAttributes",
				"flowElement",
				"activity",
				"subprocess",
				"loopcharacteristics",
				"properties",
				"iospecification"
			],
			"properties" :		[
				{
					"id":"activitytype",
					"type":"String",
					"title":"ActivityType",
 
					"value":"Event-Sub-Process",
 
					"description":"The Type of Activity.",
 
					"readonly":true,
					"optional":false,
					"length":""
				},
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
 
					"value":"#ffffff",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"fill_el",
					"fill":true,
					"stroke":false
				},	
				{
					"id":"isatransaction",
					"type":"Boolean",
					"title":"is a Transaction",
 
					"value":false,
					"description":"A Transaction is a set of activities that logically belongs together; it might follow a specified transaction protocol.",
					"readonly":true,
					"optional":false
				},
				{
					"id":"callacitivity",
					"type":"Boolean",
					"title":"is a Call Activity",
 
					"value":false,
					"description":"a Call Activity is a wrapper for a globally defined Sub-Process that is reused in the current process.",
					"readonly":true,
					"optional":"true"
				}
			],
			"roles"	:			[
				"all",
				"fromtoall",
				"canContainArtifacts",
				"EventActivitiesMorph"
			]
		},
		
	 
		
		{
			"type" : 			"node",
			"id" :				"Exclusive_Databased_Gateway",
			"title" :			"Data-based Exclusive (XOR) Gateway",
 
			"description" :		"When splitting, it routes the sequence flow to exactly one of the outgoing branches based on conditions. When merging, it awaits one incoming branch to complete before triggering the outgoing flow.",
 
			"groups" : 			["Gateways"],
			"view":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?> <svg    xmlns:oryx=\"http://www.b3mn.org/oryx\"    xmlns:svg=\"http://www.w3.org/2000/svg\"    xmlns=\"http://www.w3.org/2000/svg\"    version=\"1.0\"    width=\"40\"    height=\"40\">   <defs      id=\"defs4\" />   <oryx:magnets>     <oryx:magnet        oryx:default=\"yes\"        oryx:cy=\"16\"        oryx:cx=\"16\" />   </oryx:magnets>        <g>        <defs>   <radialGradient id=\"background\" cx=\"10%\" cy=\"10%\" r=\"100%\" fx=\"10%\" fy=\"10%\">    <stop offset=\"0%\" stop-color=\"#ffffff\" stop-opacity=\"1\"/>    <stop id=\"fill_el\" offset=\"100%\" stop-color=\"#ffffff\" stop-opacity=\"1\"/>   </radialGradient>  </defs>       <path        d=\"M -4.5,16 L 16,-4.5 L 35.5,16 L 16,35.5z\"        id=\"bg_frame\"        fill=\"url(#background) white\"        style=\"stroke:#000000;stroke-width:1\" />     <g        id=\"cross\">       <path          d=\"M 8.75,7.55 L 12.75,7.55 L 23.15,24.45 L 19.25,24.45 z\"          style=\"fill:#000000;stroke:#000000;stroke-width:1\" />       <path          d=\"M 8.75,24.45 L 19.25,7.55 L 23.15,7.55 L 12.75,24.45 z\"          style=\"fill:#000000;stroke:#000000;stroke-width:1\" />     </g>    <text id=\"text_name\" x=\"26\" y=\"26\" oryx:align=\"left top\"/>     </g> </svg> ",
			"icon" : 			"gateway/exclusive.databased.png",
			"propertyPackages" :[
				"baseAttributes",
				"flowElement",
				"gateway",
				"bgColor"
			],
			"properties" :		[
				{
					"id":"gatewaytype",
					"type":"String",
					"title":"Gateway type",
					"title":"Gateway-Typ",
					"value":"XOR",
					"description":"",
					"readonly":true,
					"optional":false,
					"length":""
				},
				{
					"id":"xortype",
					"type":"String",
					"title":"XOR type",
 
					"value":"Data",
					"description":"",
					"readonly":true,
					"optional":false,
					"length":""
				},
				{
					"id":"markervisible",
					"type":"Boolean",
					"title":"X-Marker visible",
 
					"value":"true",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"cross"
				},		
				{
					"id":"defaultgate",
					"type":"String",
					"title":"Default gate",
 
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50",
					"wrapLines":true
				},
				{
					"id":"gate_outgoingsequenceflow",
					"type":"String",
					"title":"[Gate] OutgoingSequenceFlow",
 
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50"
				},
				{
					"id":"gate_assignments",
					"type":"String",
					"title":"[Gate] Assignments",
 
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50",
					"wrapLines":true
				}	
			],
			"roles": 			[
				"all",
				"sequence_start",
				"sequence_end",
			
				"fromtoall",
				"GatewaysMorph"
			]
		},
		{
			"type" : 			"node",
			"id" : 				"EventbasedGateway",
			"title" :			"Event-based Gateway",
 
			"groups" :			["Gateways"],
			"description" :		"Is always followed by catching events or receive tasks. Sequence flow is routed to the subsequent event/task which happens first.",
 
			"view":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?> <svg    xmlns:oryx=\"http://www.b3mn.org/oryx\"    xmlns:svg=\"http://www.w3.org/2000/svg\"    xmlns=\"http://www.w3.org/2000/svg\"    version=\"1.0\"    width=\"40\"    height=\"40\">   <oryx:magnets>     <oryx:magnet        oryx:default=\"yes\"        oryx:cy=\"16\"        oryx:cx=\"16\" />   </oryx:magnets>      <g>          <defs>   <radialGradient id=\"background\" cx=\"10%\" cy=\"10%\" r=\"100%\" fx=\"10%\" fy=\"10%\">    <stop offset=\"0%\" stop-color=\"#ffffff\" stop-opacity=\"1\"/>    <stop id=\"fill_el\" offset=\"100%\" stop-color=\"#ffffff\" stop-opacity=\"1\"/>   </radialGradient>  </defs>    <path   d=\"M -4.5,16 L 16,-4.5 L 35.5,16 L 16,35.5z\"   id=\"bg_frame\"   fill=\"url(#background) white\"   style=\"stroke:#000000;stroke-width:1\" />  <circle   cx=\"16\"   cy=\"16\"   r=\"10.4\"   style=\"fill:none;stroke:#000000;stroke-width:0.5\" />  <circle   cx=\"16\"   cy=\"16\"   r=\"11.7\"   style=\"fill:none;stroke:#000000;stroke-width:0.5\" />  <path   d=\"M 20.327514,22.344972 L 11.259248,22.344216 L 8.4577203,13.719549 L 15.794545,8.389969 L 23.130481,13.720774 L 20.327514,22.344972 z\"   id=\"middlePolygon\"   style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:1.39999998;stroke-linejoin:bevel;stroke-opacity:1\" />      <g id=\"instantiate\">     <path    d=\"M -4.5,16 L 16,-4.5 L 35.5,16 L 16,35.5z\"    id=\"bg_frame\"    fill=\"url(#background) white\"    style=\"stroke:#000000;stroke-width:1\" />   <circle    cx=\"16\"    cy=\"16\"    r=\"11\"    style=\"fill:none;stroke:#000000;stroke-width:1\" />   <path    d=\"M 20.327514,22.344972 L 11.259248,22.344216 L 8.4577203,13.719549 L 15.794545,8.389969 L 23.130481,13.720774 L 20.327514,22.344972 z\"    id=\"middlePolygon\"    style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:1.39999998;stroke-linejoin:bevel;stroke-opacity:1\" />       <g id=\"parallel\">    <path     d=\"M -4.5,16 L 16,-4.5 L 35.5,16 L 16,35.5z\"     id=\"bg_frame\"     fill=\"url(#background) white\"     style=\"stroke:#000000;stroke-width:1\" />    <circle id=\"frame5\" cx=\"16\" cy=\"16\" r=\"12\" stroke=\"black\" fill=\"none\" stroke-width=\"1\"/>        <path     d=\"M 6.75,14 L6.75,18 L14,18 L14,24.75 L18,24.75 L18,18 L24.75,18 L24.75,14 L18,14 L18,6.75 L14,6.75 L14,14z\"     id=\"path9\"     style=\"fill:none;stroke:#000000;stroke-width:1\" />      </g>    </g>    <text id=\"text_name\" x=\"26\" y=\"26\" oryx:align=\"left top\"/>     </g>    </svg> ",
			"icon" :			"gateway/eventbased.png",
			"propertyPackages" :[
				"baseAttributes",
				"flowElement",
				"gateway",
				"bgColor"
			],
			"properties" :		[
				{
					"id":"eventtype",
					"type":"Choice",
					"title":"Type",
 
					"value":"exclusive",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"items":[
						{
							"id":"c1",
							"title":"Exclusive (standard)",
 
							"value":"exclusive",
							"icon" : "gateway/list/eventbased.exclusive.png",
							"refToView":"default"
						},
						{
							"id":"c2",
							"title":"Exclusive Instantiation",
 
							"value":"instantiate_exclusive",
							"icon" : "gateway/list/eventbased.exclusive.png",
							"refToView":["default","instantiate"]
						},
						{
							"id":"c3",
							"title":"Parallel Instantiation",
 
							"value":"instantiate_parallel",
							"icon" : "gateway/list/eventbased.parallel.png",
							"refToView":["parallel","instantiate"]
						}
					]
				}
			],
			"roles":			[
				"all",
				"sequence_end",
			
				"fromtoall",
				"GatewaysMorph",
				"EventbasedGateway"
			]
		},
		{
			"type" : 			"node",
			"id" :				"ParallelGateway",
			"title" :			"Parallel Gateway",
 
			"groups" :			["Gateways"],
			"description" :		"When used to split the sequence flow, all outgoing branches are activated simultaneously. When merging parallel branches it waits for all incoming branches to complete before triggering the outgoing flow.",
 
			"view":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?> <svg    xmlns:oryx=\"http://www.b3mn.org/oryx\"    xmlns:svg=\"http://www.w3.org/2000/svg\"    xmlns=\"http://www.w3.org/2000/svg\"    version=\"1.0\"    width=\"40\"    height=\"40\">       <oryx:magnets>     <oryx:magnet        oryx:default=\"yes\"        oryx:cy=\"16\"        oryx:cx=\"16\" />   </oryx:magnets>   <g>      <defs>   <radialGradient id=\"background\" cx=\"10%\" cy=\"10%\" r=\"100%\" fx=\"10%\" fy=\"10%\">    <stop offset=\"0%\" stop-color=\"#ffffff\" stop-opacity=\"1\"/>    <stop id=\"fill_el\" offset=\"100%\" stop-color=\"#ffffff\" stop-opacity=\"1\"/>   </radialGradient>  </defs>       <path        d=\"M -4.5,16 L 16,-4.5 L 35.5,16 L 16,35.5z\"        id=\"bg_frame\"        fill=\"url(#background) white\"        style=\"stroke:#000000;stroke-width:1\" />     <path        d=\"M 6.75,16 L 25.75,16 M 16,6.75 L 16,25.75\"        id=\"path9\"        style=\"fill:none;stroke:#000000;stroke-width:3\" />       <text id=\"text_name\" x=\"26\" y=\"26\" oryx:align=\"left top\"/>     </g> </svg> ",
			"icon" :			"gateway/parallel.png",
			"propertyPackages" :[
				"baseAttributes",
				"flowElement",
				"gateway",
				"bgColor"
			],
			"properties" : [
				{
					"id":"gatewaytype",
					"type":"String",
					"title":"GatewayType",
 
					"value":"AND",
					"description":"",
					"readonly":true,
					"optional":false,
					"length":""
				}
			],
			"roles": 			[
				"all",
				"sequence_start",
				"sequence_end",
			
				"fromtoall",
				"GatewaysMorph"
			]
		},
		{
			"type" : 			"node",
			"id" :				"Pool",
			"title" :			"Pool",
			"groups" :			["Swimlanes"],
 
			"description" :		"Pools and Lanes represent responsibilities for activities in a process. A pool or a lane can be an organization, a role, or a system.",
 
			"view":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?> <svg    xmlns=\"http://www.w3.org/2000/svg\"    xmlns:svg=\"http://www.w3.org/2000/svg\"    xmlns:oryx=\"http://www.b3mn.org/oryx\"    xmlns:xlink=\"http://www.w3.org/1999/xlink\"    width=\"600\"    height=\"250\"    version=\"1.0\">   <defs></defs>   <oryx:magnets>    <oryx:magnet oryx:cx=\"0\" oryx:cy=\"124\" oryx:anchors=\"left\" />    <oryx:magnet oryx:cx=\"299\" oryx:cy=\"249\" oryx:anchors=\"bottom\" />    <oryx:magnet oryx:cx=\"599\" oryx:cy=\"124\" oryx:anchors=\"right\" />    <oryx:magnet oryx:cx=\"299\" oryx:cy=\"0\" oryx:anchors=\"top\" />    <oryx:magnet oryx:cx=\"299\" oryx:cy=\"124\" oryx:default=\"yes\" />   </oryx:magnets>   <g pointer-events=\"painted\" >      <defs>   <radialGradient id=\"background\" cx=\"0%\" cy=\"10%\" r=\"100%\" fx=\"20%\" fy=\"10%\">    <stop offset=\"0%\" stop-color=\"#ffffff\" stop-opacity=\"1\"/>    <stop id=\"fill_el\" offset=\"100%\" stop-color=\"#ffffff\" stop-opacity=\"1\"/>   </radialGradient>  </defs>         <rect id=\"border\" class=\"stripable-element-force\" oryx:resize=\"vertical horizontal\" x=\"0\" y=\"0\" width=\"600\" height=\"250\" fill=\"none\" stroke-width=\"9\" stroke=\"white\" visibility=\"hidden\"/>     <rect id=\"c\" oryx:resize=\"vertical horizontal\" x=\"0\" y=\"0\" width=\"600\" height=\"250\" stroke=\"black\" fill=\"none\" />       <rect    id=\"caption\"   oryx:anchors=\"left top bottom\"   x=\"0\"   y=\"0\"   width=\"30\"   height=\"250\"   stroke=\"black\"   stroke-width=\"1\"   fill=\"white\"  />    <rect    id=\"captionDisableAntialiasing\"   oryx:anchors=\"left top bottom\"   x=\"0\"   y=\"0\"   width=\"30\"   height=\"250\"   stroke=\"black\"   stroke-width=\"1\"   fill=\"url(#background) white\"  />       <text x=\"10\" y=\"125\" font-size=\"14\" id=\"text_name\" oryx:fittoelem=\"caption\" oryx:align=\"middle center\" oryx:anchors=\"left\" oryx:rotate=\"270\" fill=\"black\" stroke=\"black\"></text>    <g id=\"multiInstance\">   <path oryx:anchors=\"bottom\" fill=\"none\" stroke=\"black\" d=\"M296 240 v8 M300 240 v8 M304 240 v8\" stroke-width=\"2\" />  </g>   </g> </svg> ",
			"icon" :			"swimlane/pool.png",
			"propertyPackages": [
				"baseAttributes",
				"pool",
				"process",
				"bgColor"
			],
			"roles" : 			[
				"all",
				"messageflow_start",
				"messageflow_end",
				"fromtoall",
				"canContainArtifacts"				
			],
			"layout" : [{"type" : "layout.bpmn2_0.pool"}]
		},
		{
			"type" : 			"node",
			"id" :				"CollapsedPool",
			"title" :			"Collapsed Pool",
 
			"groups" :			["Swimlanes"],
 
			"description" :		"Collapsed Pools hide all internals of the contained processes.",
 
			"view":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?> <svg    xmlns=\"http://www.w3.org/2000/svg\"    xmlns:svg=\"http://www.w3.org/2000/svg\"    xmlns:oryx=\"http://www.b3mn.org/oryx\"    xmlns:xlink=\"http://www.w3.org/1999/xlink\"    width=\"600\"    height=\"250\"    version=\"1.0\">   <defs></defs>   <oryx:magnets>    <oryx:magnet oryx:cx=\"0\" oryx:cy=\"29\" oryx:anchors=\"left\" />    <oryx:magnet oryx:cx=\"249\" oryx:cy=\"59\" oryx:anchors=\"bottom\" />    <oryx:magnet oryx:cx=\"499\" oryx:cy=\"29\" oryx:anchors=\"right\" />    <oryx:magnet oryx:cx=\"249\" oryx:cy=\"0\" oryx:anchors=\"top\" />    <oryx:magnet oryx:cx=\"249\" oryx:cy=\"29\" oryx:default=\"yes\" />   </oryx:magnets>   <g pointer-events=\"fill\" >        <defs>   <radialGradient id=\"background\" cx=\"10%\" cy=\"10%\" r=\"100%\" fx=\"10%\" fy=\"10%\">    <stop offset=\"0%\" stop-color=\"#ffffff\" stop-opacity=\"1\"/>    <stop id=\"fill_el\" offset=\"100%\" stop-color=\"#ffffff\" stop-opacity=\"1\"/>   </radialGradient>  </defs>       <rect id=\"c\" oryx:resize=\"vertical horizontal\" x=\"0\" y=\"0\" width=\"500\" height=\"60\" stroke=\"black\" fill=\"url(#background) white\" />     <rect id=\"border\" oryx:resize=\"vertical horizontal\" x=\"0\" y=\"0\" width=\"500\" height=\"60\" stroke=\"black\" stroke-width=\"1\" fill=\"none\" />       <text    x=\"250\"    y=\"30\"    font-size=\"20\"    id=\"text_name\"    oryx:align=\"middle center\"    oryx:fittoelem=\"border\"   oryx:anchors=\"\"    fill=\"black\"    stroke=\"black\">  </text>    <g id=\"multiInstance\">   <path oryx:anchors=\"bottom\" fill=\"none\" stroke=\"black\" d=\"M246 50 v8 M250 50 v8 M254 50 v8\" stroke-width=\"2\" />  </g>     </g> </svg> ",
			"icon" :			"swimlane/lane.png",
			"propertyPackages": [
				"baseAttributes",
				"pool",
				"process",
				"bgColor"
			],
			"properties" : 		[
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
 
					"value":"#ffffff",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"fill_el",
					"fill":true,
					"stroke":false
				}
			],
			"roles" :		 	[
				"all",
				"messageflow_start",
				"messageflow_end",
				"fromtoall"				
			]
		},
		{
			"type" : 			"node",
			"id" :				"Lane",
			"title" :			"Lane",
			"groups" :			["Swimlanes"],
 
			"description" :		"Pools and Lanes represent responsibilities for activities in a process. A pool or a lane can be an organization, a role, or a system. Lanes sub-divide pools or other lanes hierarchically.",
 
			"view":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?> <svg    xmlns=\"http://www.w3.org/2000/svg\"    xmlns:svg=\"http://www.w3.org/2000/svg\"    xmlns:oryx=\"http://www.b3mn.org/oryx\"    xmlns:xlink=\"http://www.w3.org/1999/xlink\"    width=\"600\"    height=\"250\"    version=\"1.0\">   <defs></defs>   <g pointer-events=\"painted\" >         <defs>   <radialGradient id=\"background\" cx=\"0%\" cy=\"10%\" r=\"100%\" fx=\"20%\" fy=\"10%\">    <stop offset=\"0%\" stop-color=\"#ffffff\" stop-opacity=\"1\"/>    <stop id=\"fill_el\" offset=\"100%\" stop-color=\"#ffffff\" stop-opacity=\"1\"/>   </radialGradient>  </defs>      <rect id=\"border_invisible\" class=\"stripable-element-force\" oryx:resize=\"vertical horizontal\" x=\"0\" y=\"0\" width=\"600\" height=\"250\" fill=\"none\" stroke-width=\"10\" stroke=\"white\" visibility=\"hidden\"/>  <rect id=\"border\" oryx:resize=\"vertical horizontal\" x=\"0\" y=\"0\" width=\"600\" height=\"250\" stroke=\"black\" stroke-width=\"1\" fill=\"none\" />    <rect    id=\"caption\"   oryx:anchors=\"left top bottom\"   x=\"0\"   y=\"1\"   width=\"30\"   height=\"248\"   stroke=\"black\"   stroke-width=\"0\"   fill=\"white\"   visibility=\"hidden\"   class=\"stripable-element-force\"  />    <path          style=\"fill:none;stroke:#000000;stroke-width:1\"          d=\"M 0,0 L 0,250\"          oryx:anchors=\"left top bottom\"          id=\"captionDisableAntialiasing\" />    <!--rect    id=\"captionDisableAntialiasing\"   oryx:anchors=\"left top bottom\"   x=\"0\"   y=\"0\"   width=\"30\"   height=\"250\"   stroke=\"black\"   stroke-width=\"1\"   fill=\"url(#background) white\"  /-->       <text    x=\"13\"   y=\"125\"    oryx:rotate=\"270\"    font-size=\"14\"    id=\"text_name\"    oryx:align=\"middle center\"    oryx:anchors=\"left\"   oryx:fittoelem=\"caption\"   fill=\"black\"    stroke=\"black\">  </text>   </g> </svg> ",
			"icon" :			"swimlane/lane.png",
			"propertyPackages": [
				"baseAttributes"
			],
			"properties" : 		[
				{
					"id":"parentpool",
					"type":"String",
					"title":"ParentPool",
 
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"30"
				},
				{
					"id":"parentlane",
					"type":"String",
					"title":"ParentLane",
 
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"30"
				},
				{
					"id":"showcaption",
					"type":"Boolean",
					"title":"ShowCaption",
 
					"value":"true",
					"description":"",
					"readonly":true,
					"optional":false,
					"refToView": ["caption", "captionDisableAntialiasing"],
					"fill":true,
					"visible":false,
					"stroke":false,
					"hidden":true
				}
			],
			"roles": 			[
				"PoolChild",
				"fromtoall",
				"canContainArtifacts"				
			],
			"layout" : [
						{"type" : "layout.bpmn11.lane"},
						{
							"type" : "layout.container.minBounds",
							"options" : {
								"ignoreChildsWithId" : [
									"http://b3mn.org/stencilset/bpmn2.0#Lane"
								]
							}
						}
			]
		},
        {
            "type" :            "node",
            "id" :              "processparticipant",
            "title" :           "Additional Participant",
 
            "groups" :          ["Swimlanes"],
 
            "description" :     "he additional participant can be connected to a task or sub process. It is used to visualize additional associations of roles or individuals to the respective activity (e.g. responsibility, informed persons, etc.).",
 
            "view":"<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\" ?> <svg      xmlns=\"http://www.w3.org/2000/svg\"     xmlns:svg=\"http://www.w3.org/2000/svg\"     xmlns:oryx=\"http://www.b3mn.org/oryx\"     xmlns:xlink=\"http://www.w3.org/1999/xlink\"          width=\"60px\"      height=\"60px\"     version=\"1.0\">   <g>      <defs>         <radialGradient id=\"background\" cx=\"30%\" cy=\"30%\" r=\"50%\" fx=\"0%\" fy=\"0%\">             <stop offset=\"0%\" stop-color=\"#ffffff\" stop-opacity=\"1\"></stop>             <stop offset=\"100%\" stop-color=\"#ffffff\" stop-opacity=\"1\" id=\"fill_el\"></stop>         </radialGradient>     </defs>     <path fill=\"url(#background) #ffffff\" stroke=\"#010101\" d=\"M7.757,58.934h51.667V41.758c0,0-5.114-8.586-15.527-11.328H24.751         C12.313,33.384,7.575,43.037,7.575,43.037L7.757,58.934z\"/>               <path fill=\"none\" stroke=\"#010101\" d=\"M18.49,49.799v8.771\"/>       <path fill=\"none\" stroke=\"#010101\" d=\"M48.051,49.799v8.771\"/>       <circle fill=\"#010101\" stroke=\"#010101\" cx=\"33.845\" cy=\"18.916\" r=\"11.879\"/>       <path fill=\"#F1F0F1\" stroke=\"#010101\" d=\"M22.972,21.474c0,0,6.17-5.319,11.788-3.962C40.379,18.87,44.9,15.994,44.9,15.994         c0.549,3.701,0.093,8.222-3.199,12.243c0,0,2.377,1.644,2.377,3.289c0,1.647,0.272,4.111-2.193,6.58         c-2.465,2.465-12.061,2.741-14.801,0c-2.741-2.742-2.741-4.02-2.741-5.849c0-1.828,1.278-2.74,2.741-4.202         C24.708,26.775,21.604,22.845,22.972,21.474z\"/>               <text font-size=\"12\" id=\"text_name\" x=\"34\" y=\"66\" oryx:align=\"center top\" stroke=\"black\" />            </g> </svg> ",
            "icon" :            "swimlane/process.participant.png",
            "defaultAlign" :    "northeast",
            "propertyPackages": [
                "baseAttributes",
                "flowElement",
                "artifact",
                "bgColor"
            ],
            "roles": [
                "all",
                "from_participant",
                "to_participant",
                "fromtoall",
                "eventSubprocessElement"
            ]
        },
		
	 
		
		{
			"type" : 			"node",
			"id" : 				"Group",
			"title" :			"Group",
 
			"groups" :			["Artifacts"],
 
			"description" :		"An arbitrary set of objects can be defined as a Group to show that they logically belong together.",
 
			"view":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?> <svg   xmlns=\"http://www.w3.org/2000/svg\"   xmlns:svg=\"http://www.w3.org/2000/svg\"   xmlns:oryx=\"http://www.b3mn.org/oryx\"   xmlns:xlink=\"http://www.w3.org/1999/xlink\"   width=\"122\"   height=\"92\"   version=\"1.0\">   <defs></defs>   <g pointer-events=\"fill\" oryx:minimumSize=\"60 50\">     <rect id=\"c\" oryx:resize=\"vertical horizontal\" x=\"0\" y=\"0\" width=\"120\" height=\"90\" rx=\"5\" ry=\"5\" stroke=\"black\" stroke-dasharray=\"2, 4, 10, 4\" stroke-width=\"1\" fill=\"none\" />     <text    font-size=\"12\"    id=\"text\" x=\"4\" y=\"2\"    oryx:align=\"top left\"   oryx:fittoelem=\"c\"   oryx:anchors=\"top left\"   stroke=\"black\">  </text>   </g> </svg> ",
			"icon":				"artifact/group.png",
			"propertyPackages" : [
				"baseAttributes",
				"flowElement",
				"artifact"
			],
			"properties" : [
				{
					"id":"artifacttype",
					"type":"String",
					"title":"ArtifactType",
 
					"value":"Group",
					"description":"",
					"readonly":true,
					"optional":false,
					"length":""
				}
			],
			"roles": [
				"all",
				"fromtoall",
				"canContainArtifacts"
			]
		},
		{
			"type" : 			"node",
			"id" : 				"TextAnnotation",
			"title" :			"Text Annotation",
 
			"groups" :			["Artifacts"],
 
			"description" :		"Any object can be associated with a Text Annotation to provide additional documentation.",
 
			"view":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?> <svg    xmlns=\"http://www.w3.org/2000/svg\"    xmlns:svg=\"http://www.w3.org/2000/svg\"    xmlns:oryx=\"http://www.b3mn.org/oryx\"    xmlns:xlink=\"http://www.w3.org/1999/xlink\"    width=\"102\"    height=\"51\"    version=\"1.0\">   <defs></defs>   <oryx:magnets>    <oryx:magnet oryx:cx=\"2\" oryx:cy=\"25\" oryx:anchors=\"left\" oryx:default=\"yes\"/>   </oryx:magnets>   <g pointer-events=\"all\" oryx:minimumSize=\"10 20\" oryx:maximumSize=\"\" >   <rect   id=\"textannotationrect\"  oryx:resize=\"vertical horizontal\"  x=\"1\"   y=\"1\"  width=\"100\"  height=\"50\"  stroke=\"none\"  fill=\"none\" />   <path   d=\"M20,1 L1,1 L1,50 L20,50\"   oryx:anchors=\"top bottom left\"   stroke=\"black\"   fill=\"none\"   stroke-width=\"1\" />          <text    font-size=\"12\"    id=\"text\"    x=\"5\"    y=\"25\"    oryx:align=\"middle left\"   oryx:fittoelem=\"textannotationrect\"   oryx:anchors=\"left\"   stroke=\"black\">  </text>   </g> </svg> ",
			"icon" :			"artifact/text.annotation.png",
			"defaultAlign" :	"northeast",
			"propertyPackages": [
				"baseAttributes",
				"flowElement",
				"artifact"
			],
			"properties" : 		[
				{
					"id":"text",
					"type":"String",
					"title":"Text",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"text",
					"length":"",
					"wrapLines":true
				},
				{
					"id":"artifacttype",
					"type":"String",
					"title":"ArtifactType",
 
					"value":"Annotation",
					"description":"",
					"readonly":true,
					"optional":false,
					"length":""
				}
			],
			"roles": [
				"all",
				"from_artifact",
				"to_artifact",
				"TextAnnotationMorph"
			]
		},
		
	 
		
		{
			"type" : 			"node",
			"id" :				"DataObject",
			"title" :			"Data Object",
 
			"description" :		"A Data Object represents information flowing through the process, such as business documents, e-mails or letters.",
 
			"groups" :			["Data Objects"],
 
			"view":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?> <svg    xmlns=\"http://www.w3.org/2000/svg\"    xmlns:svg=\"http://www.w3.org/2000/svg\"    xmlns:oryx=\"http://www.b3mn.org/oryx\"    xmlns:xlink=\"http://www.w3.org/1999/xlink\"    width=\"102\"    height=\"82\"    version=\"1.0\">   <defs></defs>   <oryx:magnets>  <oryx:magnet oryx:cx=\"0\" oryx:cy=\"48.5\" oryx:anchors=\"left\"/>  <oryx:magnet oryx:cx=\"44\" oryx:cy=\"97\" oryx:anchors=\"bottom\"/>  <oryx:magnet oryx:cx=\"88\" oryx:cy=\"48.5\" oryx:anchors=\"right\"/>  <oryx:magnet oryx:cx=\"44\" oryx:cy=\"0\" oryx:anchors=\"top\"/>  <oryx:magnet oryx:cx=\"44\" oryx:cy=\"48.5\" oryx:default=\"yes\"/>   </oryx:magnets>  <g pointer-events=\"fill\">      <defs>    <radialGradient id=\"background\" cx=\"10%\" cy=\"10%\" r=\"100%\" fx=\"10%\" fy=\"10%\">     <stop offset=\"0%\" stop-color=\"#ffffff\" stop-opacity=\"1\"/>     <stop id=\"fill_el\" offset=\"100%\" stop-color=\"#ffffff\" stop-opacity=\"1\"/>    </radialGradient>   </defs>      <polyline oryx:resize=\"vertical horizontal\" oryx:anchors=\"left right\" id=\"frame\" stroke=\"black\" fill=\"#ffffff\" stroke-width=\"1\" points=\"78,97 0,97 0,0 78,0\"/>      <polyline oryx:anchors=\"right top bottom\" id=\"celem2\" stroke=\"black\" fill=\"#ffffff\" stroke-width=\"1\" points=\"78,97 88,97 88,10 78,10\"/>      <polyline oryx:anchors=\"right top\" id=\"celem3\" stroke=\"black\" fill=\"url(#background) white\" stroke-width=\"1\" points=\"88,10 78,0 78,10 88,10\"/>      <rect id=\"unvisibleBorder\" x=\"0\" y=\"0\" height=\"97\" width=\"88\" stroke=\"none\" fill=\"none\" oryx:resize=\"horizontal vertical\"/>      <text font-size=\"12\" id=\"text_name\" x=\"44\" y=\"48.5\" oryx:align=\"middle center\" oryx:fittoelem=\"unvisibleBorder\" stroke=\"black\" />      <text font-size=\"11\" id=\"text_state\" x=\"44\" y=\"80\" oryx:align=\"middle center\" stroke=\"black\" oryx:anchors=\"bottom\" />      <polygon oryx:anchors=\"left top\" id=\"input\" stroke=\"black\" fill=\"white\" stroke-width=\"1.4\" points=\"9,13 19,13 19,10 25,16 19,22 19,19 9,19\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" />      <polygon oryx:anchors=\"left top\" id=\"output\" stroke=\"black\" fill=\"black\" stroke-width=\"1\" points=\"9,13 19,13 19,10 25,16 19,22 19,19 9,19\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" />      <g id=\"collection\" transform=\"translate(0,-2)\">    <path oryx:anchors=\"bottom\" fill=\"none\" stroke=\"#000000\" stroke-width=\"2\" d=\"M41.833,86.5v10 M45.833,86.5v10 M49.833,86.5v10\"/>   </g>  </g> </svg> ",
			"icon" :			"dataobject/data.object.png",
			"defaultAlign" :	"southeast",
			"propertyPackages":	[
				"baseAttributes",
				"flowElement",
				"properties",
				"bgColor"
			],
			"properties" :		[
				{
					"id":"state",
					"type":"String",
					"title":"State",
 
					"value":"",
					"description":"",
					"refToView":"text_state",
					"readonly":false,
					"optional":true,
					"directlyEditable":false
				},
				{
					"id":"input_output",
					"type":"Choice",
					"title":"Input/Output",
 
					"value":"None",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"items":[
						{
							"id":"c1",
							"title":"None",
							"value":"None",						
							"refToView":"none"
						},
						{
							"id":"c2",
							"title":"Input",
							"value":"Input",
							"icon" : "dataobject/list/input.png",
							"refToView":"input"
						},
						{
							"id":"c3",
							"title":"Output",
							"value":"Output",
							"icon" : "dataobject/list/output.png",
							"refToView":"output"
						}
					]
				},		
				{
					"id" : "iscollection",
					"type" : "Boolean",
					"title" : "is Collection",
 
					"value" : false,
					"description" : "A Collection Data Object represents a collection of information, e.g. a list of order items.",
 
					"readonly" : false,
					"optional" : true,
					"refToView" : "collection"
				}
			],
			"roles" : 			[
				"all",
				"from_task_event",
				"to_task_event",
				"fromtoall",
				"DataObjectMorph"
			]
		},
		{
			"type" : 			"node",
			"id" :				"ITSystem",
			"title" :			"IT System",
 
			"groups" :			["Artifacts"],
 
			"description" : 	"An IT System can be associated with an activity. It is a system or application used while fulfilling the activity.",
 
			"view":"<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\" ?> <svg   version=\"1.0\"      xmlns=\"http://www.w3.org/2000/svg\"   xmlns:xlink=\"http://www.w3.org/1999/xlink\"   xmlns:oryx=\"http://www.b3mn.org/oryx\"     width=\"63.875px\"   height=\"57.946px\">   <g oryx:minimumSize=\"63.875 57.946\">   <defs>    <radialGradient id=\"background\" cx=\"30%\" cy=\"30%\" r=\"50%\" fx=\"0%\" fy=\"0%\">     <stop offset=\"10%\" stop-color=\"#ffffff\" stop-opacity=\"1\"></stop>     <stop offset=\"100%\" stop-color=\"#e1e1e1\" stop-opacity=\"1\" id=\"fill_el\"></stop>    </radialGradient>   </defs>      <rect x=\"18.442\" y=\"11.421\" ill=\"#FFFFFF\" stroke=\"#000000\" width=\"25.899\" height=\"42.125\" />    <rect x=\"4.4\" y=\"0.5\" fill=\"#FFFFFF\" stroke=\"#000000\" width=\"54.138\" height=\"40.097\" />    <rect id=\"monitor\" x=\"8.301\" y=\"4.869\" fill=\"url(#background) #FFFFFF\" stroke=\"#000000\" width=\"46.182\" height=\"30.735\" />   <path fill=\"#ffffff\" stroke=\"#000000\" d=\"M63.375,57.446H0.5v-14.51    h62.875V57.446z M39.467,46.993h20.118\"/>      <text font-size=\"12\" id=\"text_name\" x=\"32\" y=\"62\" oryx:align=\"center top\" stroke=\"black\" />  </g>    </svg> ",
			"icon" : 			"dataobject/it.system.png",
			"propertyPackages" : [
				"baseAttributes",
				"flowElement"				
			],
			"properties" : [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
 
					"value":"#e1e1e1",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"fill_el",
					"fill":true,
					"stroke":false
				}
			],
			"roles" :			[
			    "all",
			    "from_task_event",
			    "to_task_event",
			    "fromtoall",
			    "DataObjectMorph"
			]
		},
		{
			"type" : 			"node",
			"id" :				"DataStore",
			"title" :			"Data Store",
 
			"groups" :			["Data Objects"],
 
			"description" :		"A Data Store is a place where the process can read or wirte date, e.g. a database or a filling cabinet. It persists beyond the lifetime of the process instance.",
 
			"view":"<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\" ?> <svg   xmlns=\"http://www.w3.org/2000/svg\"  xmlns:svg=\"http://www.w3.org/2000/svg\"     xmlns:oryx=\"http://www.b3mn.org/oryx\"     xmlns:xlink=\"http://www.w3.org/1999/xlink\"    width=\"63.001px\"   height=\"61.173px\"  version=\"1.0\">  <defs></defs>  <oryx:magnets>   <oryx:magnet oryx:cx=\"0\" oryx:cy=\"30.5865\" oryx:anchors=\"left\" />   <oryx:magnet oryx:cx=\"31.5005\" oryx:cy=\"61.173\" oryx:anchors=\"bottom\" />   <oryx:magnet oryx:cx=\"63.001\" oryx:cy=\"30.5865\" oryx:anchors=\"right\" />   <oryx:magnet oryx:cx=\"31.5005\" oryx:cy=\"0\" oryx:anchors=\"top\" />   <oryx:magnet oryx:cx=\"31.5005\" oryx:cy=\"30.5865\" oryx:default=\"yes\" />  </oryx:magnets>    <g>   <defs>    <radialGradient id=\"background\" cx=\"30%\" cy=\"30%\" r=\"50%\" fx=\"0%\" fy=\"0%\">     <stop offset=\"0%\" stop-color=\"#ffffff\" stop-opacity=\"1\"></stop>     <stop offset=\"100%\" stop-color=\"#ffffff\" stop-opacity=\"1\" id=\"fill_el\"></stop>    </radialGradient>   </defs>      <path fill=\"url(#background) #ffffff\" stroke=\"#000000\" d=\"M31.634,0.662c20.013,0,31.292,3.05,31.292,5.729c0,2.678,0,45.096,0,48.244    c0,3.148-16.42,6.2-31.388,6.2c-14.968,0-30.613-2.955-30.613-6.298c0-3.342,0-45.728,0-48.05    C0.925,4.165,11.622,0.662,31.634,0.662z\"/>   <path id=\"bg_frame2\" fill=\"none\" stroke=\"#000000\" d=\"    M62.926,15.69c0,1.986-3.62,6.551-31.267,6.551c-27.646,0-30.734-4.686-30.734-6.454 M0.925,11.137    c0,1.769,3.088,6.455,30.734,6.455c27.647,0,31.267-4.565,31.267-6.551 M0.925,6.487c0,2.35,3.088,6.455,30.734,6.455    c27.647,0,31.267-3.912,31.267-6.552 M62.926,6.391v4.844 M0.949,6.391v4.844 M62.926,11.041v4.844 M0.949,11.041v4.844\"/>         <text font-size=\"12\" id=\"text_name\" x=\"31\" y=\"66\" oryx:align=\"center top\" stroke=\"black\" />       </g> </svg> ",
			"icon" :			"dataobject/data.store.png",
			"propertyPackages": [
				"baseAttributes",
				"flowElement",
				"itemAwareElement",
				"bgColor"
			],
			"properties" :		[
				{
					"id" : "capacity",
					"type" : "Integer",
					"title" : "Capacity",
 
					"description" : "",
					"readonly" : false,
					"optional" : true,
					"length" : ""
				},
				{
					"id" : "isUnlimited",
					"type" : "Boolean",
					"title" : "is Unlimited",
 
					"value" : false,
					"description" : "",
					"readonly" : false,
					"optional" : true
				},
				{
					"id" : "dataStoreRef",
					"type" : "String",
					"title" : "DataStoreRef",
 
					"description" : "",
					"readonly" : false,
					"optional" : true,
					"length": 50,
					"wrapLines" : true
				},
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
 
					"value":"#ffffff",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"fill_el",
					"fill":true,
					"stroke":false
				}
			],
			"roles" :			[
				"all",
				"fromtoall",
				"to_task_event",
				"from_task_event",
				"DataObjectMorph"
			]
		},
		{
			"type" :			"node",
			"id" :				"Message",
			"title" :			"Message",
 
			"groups" :			["Data Objects"],
 
			"description" :		"A Message is used to depict the contents of a communication between two Participants.",
 
			"view":"<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\" ?> <svg   xmlns=\"http://www.w3.org/2000/svg\"  xmlns:svg=\"http://www.w3.org/2000/svg\"     xmlns:oryx=\"http://www.b3mn.org/oryx\"     xmlns:xlink=\"http://www.w3.org/1999/xlink\"    width=\"30.375\"   height=\"22.5px\"  version=\"1.0\">  <defs></defs>  <oryx:magnets>   <oryx:magnet oryx:cx=\"0\" oryx:cy=\"10.25\" oryx:anchors=\"left\" />   <oryx:magnet oryx:cx=\"14.15\" oryx:cy=\"20.5\" oryx:anchors=\"bottom\" />   <oryx:magnet oryx:cx=\"28.375\" oryx:cy=\"10.25\" oryx:anchors=\"right\" />   <oryx:magnet oryx:cx=\"14.15\" oryx:cy=\"0\" oryx:anchors=\"top\" />   <oryx:magnet oryx:cx=\"14.15\" oryx:cy=\"10.25\" oryx:default=\"yes\" />  </oryx:magnets>   <g pointer-events=\"fill\">      <defs>    <radialGradient id=\"background\" cx=\"10%\" cy=\"10%\" r=\"100%\" fx=\"10%\" fy=\"10%\">     <stop offset=\"0%\" stop-color=\"#ffffff\" stop-opacity=\"1\"/>     <stop id=\"fill_el\" offset=\"100%\" stop-color=\"#969696\" stop-opacity=\"1\"/>    </radialGradient>   </defs>   <rect id=\"bg_frame\" x=\"1\" y=\"1\" fill=\"none\" stroke=\"#000000\" stroke-width=\"2\" width=\"28.375\" height=\"20.5\"/>   <rect id=\"nonInitiating\" x=\"1\" y=\"1\" fill=\"url(#background) #969696\" stroke=\"#000000\" stroke-width=\"2\" width=\"28.375\" height=\"20.5\"/>   <polygon id=\"bg_frame2\" fill=\"none\" stroke=\"#000000\" stroke-width=\"2\" stroke-linejoin=\"round\" points=\"1.5,1.188     15.219,12.562 28.938,1.094 \"/>   <polygon id=\"nonInitiating2\" fill=\"url(#background) #969696\" stroke=\"#000000\" stroke-width=\"2\" stroke-linejoin=\"round\" points=\"1.5,1.188     15.219,12.562 28.938,1.094 \"/>       <text font-size=\"12\" id=\"text_name\" x=\"14\" y=\"32\" oryx:align=\"top center\" stroke=\"black\" />   </g> </svg> ",
			"icon" :			"dataobject/message.png",
			"propertyPackages":	[
				"baseAttributes",
				"flowElement",
				"itemAwareElement"
			],
			"properties" :		[
				{
					"id" : "structureref",
					"type" : "String",
					"title" : "StructureRef",
 
					"description" : "",
					"readonly" : false,
					"optional" : true,
					"length" : 50,
					"wrapLines" : true
				},
				{
					"id" : "initiating",
					"type" : "Boolean",
					"title" : "is initiating",
 
					"description" : "",
					"value" : true,
					"inverseBoolean":true,
					"refToView" : ["nonInitiating", "nonInitiating2"],
					"readonly" : false,
					"optional" : true
				},
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"BackgroundColor",
 
					"value":"#ffffff",
					"description":"",
					"readonly":true,
					"optional":false,
					"refToView":["bg_frame","bg_frame2"],
					"fill":true,
					"stroke":false,
					"hidden":true
				}
			],
			"roles" :			[
				"all",
				"fromtoall",
				"DataObjectMorph"
			]
		},
		
	 
		
		{
			"type" : 			"node",
			"id": 				"StartNoneEvent",
			"title": 			"Start Event",
 
			"groups" : 			["Start Events"],
 
			"description" : 	"Untyped start event.",
 
			"view":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?> <svg    xmlns=\"http://www.w3.org/2000/svg\"    xmlns:oryx=\"http://www.b3mn.org/oryx\"    width=\"40\"    height=\"40\"    version=\"1.0\">   <defs></defs>   <oryx:magnets>    <oryx:magnet oryx:cx=\"16\" oryx:cy=\"16\" oryx:default=\"yes\" />   </oryx:magnets>   <g pointer-events=\"fill\">        <defs>   <radialGradient id=\"background\" cx=\"10%\" cy=\"10%\" r=\"100%\" fx=\"10%\" fy=\"10%\">    <stop offset=\"0%\" stop-color=\"#ffffff\" stop-opacity=\"1\"/>    <stop id=\"fill_el\" offset=\"100%\" stop-color=\"#ffffff\" stop-opacity=\"1\"/>   </radialGradient>  </defs>       <circle id=\"bg_frame\" cx=\"16\" cy=\"16\" r=\"15\" stroke=\"black\" fill=\"url(#background) white\" stroke-width=\"1\"/>  <text font-size=\"11\"    id=\"text_name\"    x=\"16\" y=\"33\"    oryx:align=\"top center\"    stroke=\"black\"  ></text>   </g> </svg> ",
			"icon" : 			"startevent/none.png",
			"propertyPackages":	[
				"baseAttributes",
				
				"bgColor"
			],
			"roles" : [
				"all",
				"Startevents_all",
				"sequence_start",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"StartEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
 
					"value":"None",
					"description":"",
					"readonly":true,
					"optional":false
				}
			]
		},
		{
			"type" : "node",
			"id": "EndNoneEvent",
			"title": "End Event",
 
			"groups" : ["End Events"],
 
			"description" : "The untyped end event typically marks the standard end of a process.",
 
			"view":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?> <svg    xmlns=\"http://www.w3.org/2000/svg\"    xmlns:oryx=\"http://www.b3mn.org/oryx\"    width=\"40\"    height=\"40\"    version=\"1.0\">   <defs></defs>   <oryx:magnets>    <oryx:magnet oryx:cx=\"16\" oryx:cy=\"16\" oryx:default=\"yes\" />   </oryx:magnets>   <g pointer-events=\"fill\">      <defs>   <radialGradient id=\"background\" cx=\"10%\" cy=\"10%\" r=\"100%\" fx=\"10%\" fy=\"10%\">    <stop offset=\"0%\" stop-color=\"#ffffff\" stop-opacity=\"1\"/>    <stop id=\"fill_el\" offset=\"100%\" stop-color=\"#ffffff\" stop-opacity=\"1\"/>   </radialGradient>  </defs>       <circle id=\"bg_frame\" cx=\"16\" cy=\"16\" r=\"14\" stroke=\"black\" fill=\"url(#background) white\" stroke-width=\"3\"/>  <text font-size=\"11\"    id=\"text_name\"    x=\"16\" y=\"32\"    oryx:align=\"top center\"    stroke=\"black\"  ></text>   </g> </svg> ",
			"icon" : "endevent/none.png",
			"propertyPackages":[
				"baseAttributes",
				"bgColor"
			],
			"roles" : [
				"all",
				"sequence_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"Endevents_all",
				"EndEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
 
					"value":"None",
					"description":"",
					"readonly":true,
					"optional":false
				}
			]
		},	
		{
			"type": "node",
			"id":"EndTerminateEvent",
			"title":"Terminate End Event",
 
			"groups":["End Events"],
 
			"description":"Triggering the immediate termination of a process instance. All steps still in execution in parallel branches are terminated.",
 
			"view":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?> <svg    xmlns=\"http://www.w3.org/2000/svg\"    xmlns:oryx=\"http://www.b3mn.org/oryx\"    width=\"40\"    height=\"40\"    version=\"1.0\">   <defs></defs>   <oryx:magnets>    <oryx:magnet oryx:cx=\"16\" oryx:cy=\"16\" oryx:default=\"yes\" />   </oryx:magnets>   <g pointer-events=\"fill\">       <defs>   <radialGradient id=\"background\" cx=\"10%\" cy=\"10%\" r=\"100%\" fx=\"10%\" fy=\"10%\">    <stop offset=\"0%\" stop-color=\"#ffffff\" stop-opacity=\"1\"/>    <stop id=\"fill_el\" offset=\"100%\" stop-color=\"#ffffff\" stop-opacity=\"1\"/>   </radialGradient>  </defs>       <circle id=\"bg_frame\" cx=\"16\" cy=\"16\" r=\"14\" stroke=\"black\" fill=\"url(#background) white\" stroke-width=\"3\"/>          <circle cx=\"16\" cy=\"16\" r=\"9\" stroke=\"black\" fill=\"black\" stroke-width=\"1\"/>  <text font-size=\"11\"    id=\"text_name\"    x=\"16\" y=\"32\"    oryx:align=\"top center\"    stroke=\"black\"  ></text>   </g> </svg> ",
			"icon":"endevent/terminate.png",
			"propertyPackages":[
				"baseAttributes",
				
				"bgColor"
			],
			"roles": [
				"all",
				"sequence_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"EndEventsMorph"
			],
			"properties": [
				{
					"id":"trigger",
					"type":"String",
					"title":"Trigger",
 
					"value":"Terminate",
					"description":"",
					"readonly":true,
					"optional":false
				}
			]
		},
		{
			"type": "edge",
			"id":"SequenceFlow",
			"title":"Sequence Flow",
 
			"description":"Sequence Flow defines the execution order of activities.",
 
			"groups":["Connecting Objects"],
 
			"view":"<svg  xmlns=\"http://www.w3.org/2000/svg\"  xmlns:oryx=\"http://www.b3mn.org/oryx\"  version=\"1.0\"  oryx:edge=\"edge\" >  <defs>     <marker id=\"start\" refX=\"1\" refY=\"5\" markerUnits=\"userSpaceOnUse\" markerWidth=\"17\" markerHeight=\"11\" orient=\"auto\">      <path id=\"conditional\" d=\"M 0 5 L 8 0 L 16 5 L 8 10 L 0 5\" fill=\"white\" stroke=\"black\" stroke-width=\"1\" />    <path id=\"default\" d=\"M 5 0 L 11 10\" fill=\"white\" stroke=\"black\" stroke-width=\"1\" />     </marker>     <marker id=\"end\" refX=\"15\" refY=\"6\" markerUnits=\"userSpaceOnUse\" markerWidth=\"15\" markerHeight=\"12\" orient=\"auto\">      <path d=\"M 0 1 L 15 6 L 0 11z\" fill=\"black\" stroke=\"black\" stroke-linejoin=\"round\" stroke-width=\"2\" />     </marker>  </defs>  <g id=\"edge\">   <path d=\"M10 50 L210 50\" stroke=\"black\" fill=\"none\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" marker-start=\"url(#start)\" marker-end=\"url(#end)\" />   <text id=\"condition\" x=\"0\" y=\"0\" oryx:edgePosition=\"startTop\"/>  </g> </svg> ",
			"icon":"connector/sequenceflow.png",
			"propertyPackages":[
				"baseAttributes"
			],
			"roles": [
				"all",
				"ConnectingObjectsMorph"
			],
			"properties":[
				{
					"id":"ConditionType",
					"type":"Choice",
					"title":"ConditionType",
 
					"value":"None",
					"description":"Determine the typ of the flow object.",
 
					"readonly":false,
					"optional":false,
					"items": [
						{
							"id":"none",
							"title":"Standard",
 
							"value":"None"
						},
						{
							"id":"expression",
							"title":"Conditional Flow",
 
							"value":"Expression",
							"icon" : "connector/list/type.expression.png",
							"refToView":""
						},
						{
							"id":"default",
							"title":"Default Flow",
 
							"value":"Default",
							"icon" : "connector/list/type.default.png",
							"refToView":"default"
						}
					]
				},
				{
					"id":"conditionexpression",
					"type":"String",
					"title":"Condition Expression",
 
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"length":"",
					"refToView":"condition",
					"wrapLines":true
				},
				{
					"id":"isimmediate",
					"type":"Boolean",
					"title":"isImmediate",
 
					"value":"",
					"description":"An optional Boolean value specifying whether Activities or Choreography Activities not in the model containing the Sequence Flow can occur between the elements connected by the Sequence Flow. If the value is true, they MAY NOT occur. If the value is false, they MAY occur. Also see the isClosed attribute on Process, Choreography, and Collaboration.",
					"readonly":false,
					"optional":false
				},
				{
					"id":"showdiamondmarker",
					"type":"Boolean",
					"title":"is conditional flow",
 
					"value":false,
					"description":"System intern variable to set the Diamond invisible, if sourceShape is a gateway and ConditionType is set to Expression",
					"readonly":true,
					"optional":false,
					"visible":false,
					"refToView":"conditional"
				}
			]
		},
		{
			"type": "edge",
			"id":"Association_Undirected",
			"title":"Association (undirected)",
 
			"description":"Attaching a data object with an Undirected Association to a sequence flow indicates hand-over of information between the activities involved.",
 
			"groups":["Connecting Objects"],
 
			"view":"<svg  xmlns=\"http://www.w3.org/2000/svg\"  xmlns:oryx=\"http://www.b3mn.org/oryx\"  version=\"1.0\"  oryx:edge=\"edge\" >  <g id=\"edge\">      <path d=\"M10 50 L210 50\" stroke=\"black\" fill=\"none\" stroke-width=\"2\" stroke-dasharray=\"3, 4\" />   <text id=\"name\" x=\"0\" y=\"0\" oryx:edgePosition=\"midTop\" oryx:offsetTop=\"6\" style=\"font-size:9px;\"/>  </g> </svg> ",
			"icon":"connector/association.undirected.png",
			"roles": [
				"all",
				"ConnectingObjectsMorph"
			],			
			"propertyPackages" : [
			    "dataAssociation"
			],
			"properties" : [
				{
					"id":"type",
					"type":"Choice",
					"title":"Responsibilities",
 
					"value":" ",
					"description":"Describes the type of the responsibility according to RACI.",
 
					"readonly":false,
					"optional":true,
					"refToView":"name",
					"items": [
						{
							"id":"c1",
							"title":"None",
 
							"value":" "
						},
						{
							"id":"c2",
							"title":"responsible",
 
							"value":"performs"
						},
						{
							"id":"c3",
							"title":"accountable",
 
							"value":"approves"
						},
						{
							"id":"c4",
							"title":"consulted",
 
							"value":"consulted"
						},
						{
							"id":"c5",
							"title":"informed",
 
							"value":"isNotified"
						}
					]
				}
           ]
		},
		{
			"type": "edge",
			"id":"Association_Unidirectional",
			"title":"Association (unidirectional)",
 
			"description":"A Directed Association indicates information flow. A data object can be read at the start of an activity or written upon completion.",
 
			"groups":["Connecting Objects"],
 
			"view":"<svg  xmlns=\"http://www.w3.org/2000/svg\"  xmlns:oryx=\"http://www.b3mn.org/oryx\"  version=\"1.0\"  oryx:edge=\"edge\" >  <defs>     <marker id=\"end\" refX=\"10\" refY=\"5\" markerUnits=\"userSpaceOnUse\" markerWidth=\"10\" markerHeight=\"10\" orient=\"auto\">      <path d=\"M 0 0 L 10 5 L 0 10\" fill=\"none\" stroke=\"black\" />     </marker>  </defs>  <g id=\"edge\">      <path d=\"M10 50 L210 50\" stroke=\"black\" fill=\"none\" stroke-width=\"2\" stroke-dasharray=\"3, 4\" marker-end=\"url(#end)\" />   <text id=\"name\" x=\"0\" y=\"0\" oryx:edgePosition=\"midTop\" oryx:offsetTop=\"6\" style=\"font-size:9px;\"/>  </g> </svg> ",
			"icon":"connector/association.unidirectional.png",
			"roles": [
				"all",
				"ConnectingObjectsMorph",
				"Directed_Association"
			],
			"propertyPackages" : [
			    "dataAssociation"
			],
			"properties" : [
                {
                    "id":"text",
                    "type":"String",
                    "title":"Name",
 
                    "value":"",
                    "description":"",
                    "readonly":false,
                    "optional":true,
                    "length":"",
                    "refToView":"name",
                    "wrapLines":true,
					"popular":true
                }
           ]
		},
		{
			"type": "edge",
			"id":"Association_Bidirectional",
			"title":"Association (bidirectional)",
 
			"description":"A Bidirected Association indicates that the data object is modified, i.e. read and written during the execution of an actvity.",
 
			"groups":["Connecting Objects"],
 
			"view":"<svg  xmlns=\"http://www.w3.org/2000/svg\"  xmlns:oryx=\"http://www.b3mn.org/oryx\"  version=\"1.0\"  oryx:edge=\"edge\" >  <defs>     <marker id=\"start\" refX=\"0\" refY=\"5\" markerUnits=\"userSpaceOnUse\" markerWidth=\"10\" markerHeight=\"10\" orient=\"auto\">      <path d=\"M 10 0 L 0 5 L 10 10\" fill=\"none\" stroke=\"black\" />     </marker>     <marker id=\"end\" refX=\"10\" refY=\"5\" markerUnits=\"userSpaceOnUse\" markerWidth=\"10\" markerHeight=\"10\" orient=\"auto\">      <path d=\"M 0 0 L 10 5 L 0 10\" fill=\"none\" stroke=\"black\" />     </marker>  </defs>  <g id=\"edge\">      <path d=\"M10 50 L210 50\" stroke=\"black\" fill=\"none\" stroke-width=\"2\" stroke-dasharray=\"3, 4\" marker-start=\"url(#start)\" marker-end=\"url(#end)\" />   <text id=\"name\" x=\"0\" y=\"0\" oryx:edgePosition=\"midTop\" oryx:offsetTop=\"6\" style=\"font-size:9px;\"/>  </g> </svg> ",
			"icon":"connector/association.bidirectional.png",
			"roles": [
				"all",
				"ConnectingObjectsMorph",
				"Directed_Association"
			],			
			"propertyPackages" : [
			    "dataAssociation"
			],
			"properties" : [
                {
                    "id":"text",
                    "type":"String",
                    "title":"Name",
 
                    "value":"",
                    "description":"",
                    "readonly":false,
                    "optional":true,
                    "length":"",
                    "refToView":"name",
                    "wrapLines":true,
		"popular":true
                }
           ]
		},
		{
			"type": "edge",
			"id":"MessageFlow",
			"title":"Message Flow",
 
			"description":"Message Flow symbolizes information flow across organizational boundaries. Message flow can be attached to pools, activities, or message events. The order of message exchanges can be specified by combining message flow and sequence flow.",
 
			"groups":["Connecting Objects"],
 
			"view":"<svg  xmlns=\"http://www.w3.org/2000/svg\"  xmlns:oryx=\"http://www.b3mn.org/oryx\"  version=\"1.0\"  oryx:edge=\"edge\" >  <defs>   <marker id=\"start\" oryx:optional=\"yes\" oryx:enabled=\"yes\" refX=\"5\" refY=\"5\" markerUnits=\"userSpaceOnUse\" markerWidth=\"10\" markerHeight=\"10\" orient=\"auto\">      <!-- <path d=\"M 10 10 L 0 5 L 10 0\" fill=\"none\" stroke=\"black\" /> -->      <circle cx=\"5\" cy=\"5\" r=\"5\" fill=\"white\" stroke=\"black\" />     </marker>      <marker id=\"end\" refX=\"10\" refY=\"5\" markerUnits=\"userSpaceOnUse\" markerWidth=\"10\" markerHeight=\"10\" orient=\"auto\">      <path d=\"M 0 0 L 10 5 L 0 10 L 0 0\" fill=\"white\" stroke=\"black\" />     </marker>  </defs>  <g id=\"edge\">      <path d=\"M10 50 L210 50\" stroke=\"black\" fill=\"none\" stroke-width=\"2\" stroke-dasharray=\"3, 4\" marker-start=\"url(#start)\" marker-end=\"url(#end)\" />   <text id=\"text_name\" x=\"0\" y=\"0\" oryx:edgePosition=\"midTop\"/>  </g> </svg> ",
			"icon":"connector/messageflow.png",
			"propertyPackages":[
				"baseAttributes"
			],
			"roles": [
				"ConnectingObjectsMorph",
				"MessageContainer"
			]
		}
	],
	
	"rules" : {
		"cardinalityRules": [
			{
				"role":"Startevents_all",
				"incomingEdges": [
					{
						"role":"SequenceFlow",
						"maximum":0
						
					}
				]
			},
			{
				"role":"Endevents_all",
				"outgoingEdges": [
					{
						"role":"SequenceFlow",
						"maximum":0
						
					}
				]
			}
		],
		"connectionRules": [
			{
				"role":"SequenceFlow",
				"connects": [
					{
						"from":"sequence_start",
						"to":["sequence_end"]
					},
					{
						"from":"Exclusive_Eventbased_Gateway",
						"to":["FromEventbasedGateway"]
					},{
						"from" : "EventbasedGateway",
						"to" : ["FromEventbasedGateway"]
					}
				]
			},
			{
				"role":"MessageFlow",
				"connects": [
					{
						"from":"messageflow_start",
						"to":["messageflow_end"]
					}
				]
			},
			{
				"role" : "Directed_Association",
				"connects" : [
					{
						"from" : "from_task_event",
						"to" : ["DataObject"]
					},
					{
						"from" : "from_task_event",
						"to" : ["DataStore"]
					},
					{
						"from" : "from_task_event",
						"to" : ["ITSystem"]
					},
					{
						"from" : "DataObject",
						"to" : ["to_task_event"]
					},
					{
						"from" : "DataStore",
						"to" : ["to_task_event"]
					},
					{
						"from" : "ITSystem",
						"to" : ["to_task_event"]
					},
					
				]
			},
			{
				"role" : "Association_Undirected",
				"connects" : [
					{
						"from" : "SequenceFlow",
						"to" : ["DataObject"]
					},
					{
						"from" : "DataObject",
						"to" : ["SequenceFlow"]
					},
					{
						"from" : "DataObject",
						"to" : ["MessageFlow"]
					},
					{
						"from" : "MessageFlow",
						"to" : ["DataObject"]
					},
					{
						"from" : "ITSystem",
						"to" : ["to_task_event"]
					},
					{
						"from" : "from_task_event",
						"to" : ["ITSystem"]
					},
					{
						"from" : "DataStore",
						"to" : ["to_task_event"]
					},
					{
						"from" : "from_task_event",
						"to" : ["DataStore"]
					},
					{
						"from" : "fromtoall",
						"to" : ["TextAnnotation"]
					},
					{
						"from" : "TextAnnotation",
						"to" : "fromtoall"
					},
					{
						"from" : "Message",
						"to" : ["MessageFlow"]
					},
					{
						"from" : "MessageFlow",
						"to" : ["Message"]
					},
					{
					   "from" : "ActivitiesMorph",
					   "to" : ["to_participant"]
					},
					{
					   "from" : "to_participant",
					   "to" : ["ActivitiesMorph"]
					}
				]
			}
		],
		"containmentRules" : [
			{
				"role" : "BPMNDiagram",
				"contains" : ["all"]
			},
			{
				"role" : "EventSubprocess",
				"contains" : [
					"eventSubprocessElement",
					"sequence_start",
					"sequence_end"
				]
			},
			{
				"role" : "Pool",
				"contains" : [
					"Lane"
				]
			},
			{
				"role" : "Lane",
				"contains" : [
					"Lane",
					"sequence_start",
					"sequence_end",
					"DataObjectMorph",
					"TextAnnotationMorph",
					"from_participant"
				]
			},
			{
				"role" : "Subprocess",
				"contains" : [
					"sequence_start",
					"sequence_end",
					"from_task_event",
					"to_task_event",
					"EventSubprocess",
					"CollapsedEventSubprocess",
					"TextAnnotation",
					"from_participant"
				]
			},
			{
				"role" : "MessageContainer",
				"contains" : ["Message"]
			}
		],
		"morphingRules": [
			{
				"role": "ActivitiesMorph",
				"baseMorphs": ["Task"],
				"preserveBounds" : true
			},
			{
				"role": "EventActivitiesMorph",
				"baseMorphs": ["CollapsedEventSubprocess"]
			},
			{
				"role": "GatewaysMorph",
				"baseMorphs": ["Exclusive_Databased_Gateway"]
			},
			{
				"role": "StartEventsMorph",
				"baseMorphs": ["StartNoneEvent"],
				"showInShapeMenu":false
			},
		
			{
				"role": "EndEventsMorph",
				"baseMorphs": ["EndNoneEvent"]
			},
			{
				"role": "TextAnnotationMorph",
				"baseMorphs": ["TextAnnotation"]
			},
			{
				"role": "DataObjectMorph",
				"baseMorphs": ["DataObject"]
			},
			{
				"role": "ConnectingObjectsMorph",
				"baseMorphs": ["SequenceFlow"]
			},
			{
				"role": "AssociationMorph",
				"baseMorphs": [""]
			}
		],
		"layoutRules" : [
			{
				"role": "ActivitiesMorph",
				"outs":[{"edgeRole":"MessageFlow","t":2, "r":1, "b":2, "l":1},
						{"t":1,"r":2,"b":1,"l":2}],
				"ins": [{"edgeRole":"MessageFlow","t":2, "r":1, "b":2, "l":1},
						{"t":1, "r":2, "b":1, "l":2}]
			},
			{
				"role": "EventActivitiesMorph",
				"outs":[{"edgeRole":"MessageFlow","t":2, "r":1, "b":2, "l":1},
						{"t":1,"r":2,"b":1,"l":2}],
				"ins": [{"edgeRole":"MessageFlow","t":2, "r":1, "b":2, "l":1},
						{"t":1, "r":2, "b":1, "l":2}]
			},
			{
				"role": "GatewaysMorph",
				"outs": [{"t":2, "r":1, "b":2, "l":1}]
			},
			{
				"role": "StartEventsMorph",
				"outs":[{"edgeRole":"MessageFlow","t":2, "r":1, "b":2, "l":1},
						{"t":1,"r":2,"b":1,"l":2}],
				"ins": [{"edgeRole":"MessageFlow","t":2, "r":1, "b":2, "l":1},
						{"t":1, "r":2, "b":1, "l":2}]
			},
			{
				"role": "EndEventsMorph",
				"outs":[{"edgeRole":"MessageFlow","t":2, "r":1, "b":2, "l":1},
						{"t":1,"r":2,"b":1,"l":2}],
				"ins": [{"edgeRole":"MessageFlow","t":2, "r":1, "b":2, "l":1},
						{"t":1, "r":2, "b":1, "l":2}]
			}
		]
	}
}
